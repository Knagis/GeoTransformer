//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoTransformer.GeocachingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddGeocachesToBookmarkListRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class AddGeocachesToBookmarkListRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BookmarkListGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BookmarkListGuid {
            get {
                return this.BookmarkListGuidField;
            }
            set {
                if ((this.BookmarkListGuidField.Equals(value) != true)) {
                    this.BookmarkListGuidField = value;
                    this.RaisePropertyChanged("BookmarkListGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class StatusResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse[] WarningsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ExceptionDetails {
            get {
                return this.ExceptionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionDetailsField, value) != true)) {
                    this.ExceptionDetailsField = value;
                    this.RaisePropertyChanged("ExceptionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public GeoTransformer.GeocachingService.StatusResponse[] Warnings {
            get {
                return this.WarningsField;
            }
            set {
                if ((object.ReferenceEquals(this.WarningsField, value) != true)) {
                    this.WarningsField = value;
                    this.RaisePropertyChanged("Warnings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheStatusRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheStatusRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheStatusResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheStatusResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheStatus[] GeocacheStatusesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.GeocacheStatus[] GeocacheStatuses {
            get {
                return this.GeocacheStatusesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheStatusesField, value) != true)) {
                    this.GeocacheStatusesField = value;
                    this.RaisePropertyChanged("GeocacheStatuses");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheStatus", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CacheTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackableCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheName {
            get {
                return this.CacheNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheNameField, value) != true)) {
                    this.CacheNameField = value;
                    this.RaisePropertyChanged("CacheName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CacheType {
            get {
                return this.CacheTypeField;
            }
            set {
                if ((this.CacheTypeField.Equals(value) != true)) {
                    this.CacheTypeField = value;
                    this.RaisePropertyChanged("CacheType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Premium {
            get {
                return this.PremiumField;
            }
            set {
                if ((this.PremiumField.Equals(value) != true)) {
                    this.PremiumField = value;
                    this.RaisePropertyChanged("Premium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackableCount {
            get {
                return this.TrackableCountField;
            }
            set {
                if ((this.TrackableCountField.Equals(value) != true)) {
                    this.TrackableCountField = value;
                    this.RaisePropertyChanged("TrackableCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMembershipTypesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetMembershipTypesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.MembershipType[] MembershipsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.MembershipType[] Memberships {
            get {
                return this.MembershipsField;
            }
            set {
                if ((object.ReferenceEquals(this.MembershipsField, value) != true)) {
                    this.MembershipsField = value;
                    this.RaisePropertyChanged("Memberships");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class MembershipType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MemberTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MemberTypeId {
            get {
                return this.MemberTypeIdField;
            }
            set {
                if ((this.MemberTypeIdField.Equals(value) != true)) {
                    this.MemberTypeIdField = value;
                    this.RaisePropertyChanged("MemberTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberTypeName {
            get {
                return this.MemberTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberTypeNameField, value) != true)) {
                    this.MemberTypeNameField = value;
                    this.RaisePropertyChanged("MemberTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAPILimitsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetAPILimitsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.RestrictionMatrix LimitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.RestrictionMatrix Limits {
            get {
                return this.LimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.LimitsField, value) != true)) {
                    this.LimitsField = value;
                    this.RaisePropertyChanged("Limits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RestrictionMatrix", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    [System.SerializableAttribute()]
    public partial class RestrictionMatrix : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.CacheLimitPerMinute[] CacheLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnforceCacheLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnforceLiteCacheLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnforceMethodLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.MembershipLevel ForMembershipTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.LiteCacheLimitPerMinute[] LiteCacheLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong MaxCallsbyIPIn1MinuteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.MethodRestriction[] MethodLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RestrictbyIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidateIPCountsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.CacheLimitPerMinute[] CacheLimits {
            get {
                return this.CacheLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheLimitsField, value) != true)) {
                    this.CacheLimitsField = value;
                    this.RaisePropertyChanged("CacheLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnforceCacheLimits {
            get {
                return this.EnforceCacheLimitsField;
            }
            set {
                if ((this.EnforceCacheLimitsField.Equals(value) != true)) {
                    this.EnforceCacheLimitsField = value;
                    this.RaisePropertyChanged("EnforceCacheLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnforceLiteCacheLimits {
            get {
                return this.EnforceLiteCacheLimitsField;
            }
            set {
                if ((this.EnforceLiteCacheLimitsField.Equals(value) != true)) {
                    this.EnforceLiteCacheLimitsField = value;
                    this.RaisePropertyChanged("EnforceLiteCacheLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnforceMethodLimits {
            get {
                return this.EnforceMethodLimitsField;
            }
            set {
                if ((this.EnforceMethodLimitsField.Equals(value) != true)) {
                    this.EnforceMethodLimitsField = value;
                    this.RaisePropertyChanged("EnforceMethodLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.MembershipLevel ForMembershipType {
            get {
                return this.ForMembershipTypeField;
            }
            set {
                if ((this.ForMembershipTypeField.Equals(value) != true)) {
                    this.ForMembershipTypeField = value;
                    this.RaisePropertyChanged("ForMembershipType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseKey {
            get {
                return this.LicenseKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseKeyField, value) != true)) {
                    this.LicenseKeyField = value;
                    this.RaisePropertyChanged("LicenseKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.LiteCacheLimitPerMinute[] LiteCacheLimits {
            get {
                return this.LiteCacheLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.LiteCacheLimitsField, value) != true)) {
                    this.LiteCacheLimitsField = value;
                    this.RaisePropertyChanged("LiteCacheLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong MaxCallsbyIPIn1Minute {
            get {
                return this.MaxCallsbyIPIn1MinuteField;
            }
            set {
                if ((this.MaxCallsbyIPIn1MinuteField.Equals(value) != true)) {
                    this.MaxCallsbyIPIn1MinuteField = value;
                    this.RaisePropertyChanged("MaxCallsbyIPIn1Minute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.MethodRestriction[] MethodLimits {
            get {
                return this.MethodLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodLimitsField, value) != true)) {
                    this.MethodLimitsField = value;
                    this.RaisePropertyChanged("MethodLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RestrictbyIP {
            get {
                return this.RestrictbyIPField;
            }
            set {
                if ((this.RestrictbyIPField.Equals(value) != true)) {
                    this.RestrictbyIPField = value;
                    this.RaisePropertyChanged("RestrictbyIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidateIPCounts {
            get {
                return this.ValidateIPCountsField;
            }
            set {
                if ((this.ValidateIPCountsField.Equals(value) != true)) {
                    this.ValidateIPCountsField = value;
                    this.RaisePropertyChanged("ValidateIPCounts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheLimitPerMinute", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    [System.SerializableAttribute()]
    public partial class CacheLimitPerMinute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CacheLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InMinutesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CacheLimit {
            get {
                return this.CacheLimitField;
            }
            set {
                if ((this.CacheLimitField.Equals(value) != true)) {
                    this.CacheLimitField = value;
                    this.RaisePropertyChanged("CacheLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InMinutes {
            get {
                return this.InMinutesField;
            }
            set {
                if ((this.InMinutesField.Equals(value) != true)) {
                    this.InMinutesField = value;
                    this.RaisePropertyChanged("InMinutes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MembershipLevel", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    public enum MembershipLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basic = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Premium = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Charter = 20,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LiteCacheLimitPerMinute", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    [System.SerializableAttribute()]
    public partial class LiteCacheLimitPerMinute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong CacheLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InMinutesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CacheLimit {
            get {
                return this.CacheLimitField;
            }
            set {
                if ((this.CacheLimitField.Equals(value) != true)) {
                    this.CacheLimitField = value;
                    this.RaisePropertyChanged("CacheLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InMinutes {
            get {
                return this.InMinutesField;
            }
            set {
                if ((this.InMinutesField.Equals(value) != true)) {
                    this.InMinutesField = value;
                    this.RaisePropertyChanged("InMinutes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodRestriction", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    [System.SerializableAttribute()]
    public partial class MethodRestriction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong MaxCallsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartnerMethodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InMinutes {
            get {
                return this.InMinutesField;
            }
            set {
                if ((this.InMinutesField.Equals(value) != true)) {
                    this.InMinutesField = value;
                    this.RaisePropertyChanged("InMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong MaxCalls {
            get {
                return this.MaxCallsField;
            }
            set {
                if ((this.MaxCallsField.Equals(value) != true)) {
                    this.MaxCallsField = value;
                    this.RaisePropertyChanged("MaxCalls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartnerMethod {
            get {
                return this.PartnerMethodField;
            }
            set {
                if ((this.PartnerMethodField.Equals(value) != true)) {
                    this.PartnerMethodField = value;
                    this.RaisePropertyChanged("PartnerMethod");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSiteStatsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetSiteStatsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.SiteStats StatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.SiteStats Stats {
            get {
                return this.StatsField;
            }
            set {
                if ((object.ReferenceEquals(this.StatsField, value) != true)) {
                    this.StatsField = value;
                    this.RaisePropertyChanged("Stats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteStats", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class SiteStats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountsLoggedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActiveCachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ActiveCountriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long NewLogsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountsLogged {
            get {
                return this.AccountsLoggedField;
            }
            set {
                if ((this.AccountsLoggedField.Equals(value) != true)) {
                    this.AccountsLoggedField = value;
                    this.RaisePropertyChanged("AccountsLogged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActiveCaches {
            get {
                return this.ActiveCachesField;
            }
            set {
                if ((this.ActiveCachesField.Equals(value) != true)) {
                    this.ActiveCachesField = value;
                    this.RaisePropertyChanged("ActiveCaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ActiveCountries {
            get {
                return this.ActiveCountriesField;
            }
            set {
                if ((this.ActiveCountriesField.Equals(value) != true)) {
                    this.ActiveCountriesField = value;
                    this.RaisePropertyChanged("ActiveCountries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NewLogs {
            get {
                return this.NewLogsField;
            }
            set {
                if ((this.NewLogsField.Equals(value) != true)) {
                    this.NewLogsField = value;
                    this.RaisePropertyChanged("NewLogs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetStatusMessageResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetStatusMessageResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse[] StatusMessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse[] StatusMessages {
            get {
                return this.StatusMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessagesField, value) != true)) {
                    this.StatusMessagesField = value;
                    this.RaisePropertyChanged("StatusMessages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetImagesForGeocacheResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetImagesForGeocacheResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ImageData[] ImagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.ImageData[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ImageData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ImageGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ImageGuid {
            get {
                return this.ImageGuidField;
            }
            set {
                if ((this.ImageGuidField.Equals(value) != true)) {
                    this.ImageGuidField = value;
                    this.RaisePropertyChanged("ImageGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileUrl {
            get {
                return this.MobileUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileUrlField, value) != true)) {
                    this.MobileUrlField = value;
                    this.RaisePropertyChanged("MobileUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbUrl {
            get {
                return this.ThumbUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbUrlField, value) != true)) {
                    this.ThumbUrlField = value;
                    this.RaisePropertyChanged("ThumbUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWptLogTypesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetWptLogTypesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.WptLogType[] WptLogTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] TrackableLogTypeIdsinCacheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] TrackableLogTypeIdswithPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] GeocacheLogTypeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] EventLogTypeIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.WptLogType[] WptLogTypes {
            get {
                return this.WptLogTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.WptLogTypesField, value) != true)) {
                    this.WptLogTypesField = value;
                    this.RaisePropertyChanged("WptLogTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long[] TrackableLogTypeIdsinCache {
            get {
                return this.TrackableLogTypeIdsinCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogTypeIdsinCacheField, value) != true)) {
                    this.TrackableLogTypeIdsinCacheField = value;
                    this.RaisePropertyChanged("TrackableLogTypeIdsinCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long[] TrackableLogTypeIdswithPerson {
            get {
                return this.TrackableLogTypeIdswithPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogTypeIdswithPersonField, value) != true)) {
                    this.TrackableLogTypeIdswithPersonField = value;
                    this.RaisePropertyChanged("TrackableLogTypeIdswithPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long[] GeocacheLogTypeIds {
            get {
                return this.GeocacheLogTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheLogTypeIdsField, value) != true)) {
                    this.GeocacheLogTypeIdsField = value;
                    this.RaisePropertyChanged("GeocacheLogTypeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public long[] EventLogTypeIds {
            get {
                return this.EventLogTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventLogTypeIdsField, value) != true)) {
                    this.EventLogTypeIdsField = value;
                    this.RaisePropertyChanged("EventLogTypeIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WptLogType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class WptLogType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminActionableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OwnerActionableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WptLogTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WptLogTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdminActionable {
            get {
                return this.AdminActionableField;
            }
            set {
                if ((this.AdminActionableField.Equals(value) != true)) {
                    this.AdminActionableField = value;
                    this.RaisePropertyChanged("AdminActionable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageName {
            get {
                return this.ImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageNameField, value) != true)) {
                    this.ImageNameField = value;
                    this.RaisePropertyChanged("ImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OwnerActionable {
            get {
                return this.OwnerActionableField;
            }
            set {
                if ((this.OwnerActionableField.Equals(value) != true)) {
                    this.OwnerActionableField = value;
                    this.RaisePropertyChanged("OwnerActionable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WptLogTypeId {
            get {
                return this.WptLogTypeIdField;
            }
            set {
                if ((this.WptLogTypeIdField.Equals(value) != true)) {
                    this.WptLogTypeIdField = value;
                    this.RaisePropertyChanged("WptLogTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WptLogTypeName {
            get {
                return this.WptLogTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WptLogTypeNameField, value) != true)) {
                    this.WptLogTypeNameField = value;
                    this.RaisePropertyChanged("WptLogTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheTypesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheTypesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheType[] GeocacheTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.GeocacheType[] GeocacheTypes {
            get {
                return this.GeocacheTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypesField, value) != true)) {
                    this.GeocacheTypesField = value;
                    this.RaisePropertyChanged("GeocacheTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeocacheTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocacheTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeocacheTypeId {
            get {
                return this.GeocacheTypeIdField;
            }
            set {
                if ((this.GeocacheTypeIdField.Equals(value) != true)) {
                    this.GeocacheTypeIdField = value;
                    this.RaisePropertyChanged("GeocacheTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocacheTypeName {
            get {
                return this.GeocacheTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypeNameField, value) != true)) {
                    this.GeocacheTypeNameField = value;
                    this.RaisePropertyChanged("GeocacheTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsContainer {
            get {
                return this.IsContainerField;
            }
            set {
                if ((this.IsContainerField.Equals(value) != true)) {
                    this.IsContainerField = value;
                    this.RaisePropertyChanged("IsContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserCount {
            get {
                return this.UserCountField;
            }
            set {
                if ((this.UserCountField.Equals(value) != true)) {
                    this.UserCountField = value;
                    this.RaisePropertyChanged("UserCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheDataTypesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheDataTypesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheType[] GeocacheTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.WptLogType[] WptLogTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] TrackableLogTypeIdsinCacheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] TrackableLogTypeIdswithPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] GeocacheLogTypeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] EventLogTypeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.AttributeType[] AttributeTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.GeocacheType[] GeocacheTypes {
            get {
                return this.GeocacheTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypesField, value) != true)) {
                    this.GeocacheTypesField = value;
                    this.RaisePropertyChanged("GeocacheTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public GeoTransformer.GeocachingService.WptLogType[] WptLogTypes {
            get {
                return this.WptLogTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.WptLogTypesField, value) != true)) {
                    this.WptLogTypesField = value;
                    this.RaisePropertyChanged("WptLogTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long[] TrackableLogTypeIdsinCache {
            get {
                return this.TrackableLogTypeIdsinCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogTypeIdsinCacheField, value) != true)) {
                    this.TrackableLogTypeIdsinCacheField = value;
                    this.RaisePropertyChanged("TrackableLogTypeIdsinCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long[] TrackableLogTypeIdswithPerson {
            get {
                return this.TrackableLogTypeIdswithPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogTypeIdswithPersonField, value) != true)) {
                    this.TrackableLogTypeIdswithPersonField = value;
                    this.RaisePropertyChanged("TrackableLogTypeIdswithPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public long[] GeocacheLogTypeIds {
            get {
                return this.GeocacheLogTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheLogTypeIdsField, value) != true)) {
                    this.GeocacheLogTypeIdsField = value;
                    this.RaisePropertyChanged("GeocacheLogTypeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public long[] EventLogTypeIds {
            get {
                return this.EventLogTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.EventLogTypeIdsField, value) != true)) {
                    this.EventLogTypeIdsField = value;
                    this.RaisePropertyChanged("EventLogTypeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public GeoTransformer.GeocachingService.AttributeType[] AttributeTypes {
            get {
                return this.AttributeTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypesField, value) != true)) {
                    this.AttributeTypesField = value;
                    this.RaisePropertyChanged("AttributeTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class AttributeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasNoOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasYesOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoIconNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotChosenIconNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YesIconNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasNoOption {
            get {
                return this.HasNoOptionField;
            }
            set {
                if ((this.HasNoOptionField.Equals(value) != true)) {
                    this.HasNoOptionField = value;
                    this.RaisePropertyChanged("HasNoOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasYesOption {
            get {
                return this.HasYesOptionField;
            }
            set {
                if ((this.HasYesOptionField.Equals(value) != true)) {
                    this.HasYesOptionField = value;
                    this.RaisePropertyChanged("HasYesOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconName {
            get {
                return this.IconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IconNameField, value) != true)) {
                    this.IconNameField = value;
                    this.RaisePropertyChanged("IconName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoIconName {
            get {
                return this.NoIconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NoIconNameField, value) != true)) {
                    this.NoIconNameField = value;
                    this.RaisePropertyChanged("NoIconName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotChosenIconName {
            get {
                return this.NotChosenIconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NotChosenIconNameField, value) != true)) {
                    this.NotChosenIconNameField = value;
                    this.RaisePropertyChanged("NotChosenIconName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YesIconName {
            get {
                return this.YesIconNameField;
            }
            set {
                if ((object.ReferenceEquals(this.YesIconNameField, value) != true)) {
                    this.YesIconNameField = value;
                    this.RaisePropertyChanged("YesIconName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPocketQueryListResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetPocketQueryListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.PQData[] PocketQueryListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.PQData[] PocketQueryList {
            get {
                return this.PocketQueryListField;
            }
            set {
                if ((object.ReferenceEquals(this.PocketQueryListField, value) != true)) {
                    this.PocketQueryListField = value;
                    this.RaisePropertyChanged("PocketQueryList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PQData", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class PQData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLastGeneratedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDownloadAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeInBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.PQSearchTypes PQSearchTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PQCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((this.GUIDField.Equals(value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime DateLastGenerated {
            get {
                return this.DateLastGeneratedField;
            }
            set {
                if ((this.DateLastGeneratedField.Equals(value) != true)) {
                    this.DateLastGeneratedField = value;
                    this.RaisePropertyChanged("DateLastGenerated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsDownloadAvailable {
            get {
                return this.IsDownloadAvailableField;
            }
            set {
                if ((this.IsDownloadAvailableField.Equals(value) != true)) {
                    this.IsDownloadAvailableField = value;
                    this.RaisePropertyChanged("IsDownloadAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long FileSizeInBytes {
            get {
                return this.FileSizeInBytesField;
            }
            set {
                if ((this.FileSizeInBytesField.Equals(value) != true)) {
                    this.FileSizeInBytesField = value;
                    this.RaisePropertyChanged("FileSizeInBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public GeoTransformer.GeocachingService.PQSearchTypes PQSearchType {
            get {
                return this.PQSearchTypeField;
            }
            set {
                if ((this.PQSearchTypeField.Equals(value) != true)) {
                    this.PQSearchTypeField = value;
                    this.RaisePropertyChanged("PQSearchType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int PQCount {
            get {
                return this.PQCountField;
            }
            set {
                if ((this.PQCountField.Equals(value) != true)) {
                    this.PQCountField = value;
                    this.RaisePropertyChanged("PQCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PQSearchTypes", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.Web.PocketQueries")]
    public enum PQSearchTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bookmark = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LogEntries = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MyFinds = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserRoute = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Backlog = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Priority = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheDataResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheDataResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Geocache[] GeocachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PQCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.CacheLimitCounts CacheLimitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.Geocache[] Geocaches {
            get {
                return this.GeocachesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocachesField, value) != true)) {
                    this.GeocachesField = value;
                    this.RaisePropertyChanged("Geocaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long PQCount {
            get {
                return this.PQCountField;
            }
            set {
                if ((this.PQCountField.Equals(value) != true)) {
                    this.PQCountField = value;
                    this.RaisePropertyChanged("PQCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public GeoTransformer.GeocachingService.CacheLimitCounts CacheLimits {
            get {
                return this.CacheLimitsField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheLimitsField, value) != true)) {
                    this.CacheLimitsField = value;
                    this.RaisePropertyChanged("CacheLimits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheLimitCounts", Namespace="http://schemas.datacontract.org/2004/07/Groundspeak.API.AuthorizationLib")]
    [System.SerializableAttribute()]
    public partial class CacheLimitCounts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CachesLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentCacheCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxCacheCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CachesLeft {
            get {
                return this.CachesLeftField;
            }
            set {
                if ((this.CachesLeftField.Equals(value) != true)) {
                    this.CachesLeftField = value;
                    this.RaisePropertyChanged("CachesLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentCacheCount {
            get {
                return this.CurrentCacheCountField;
            }
            set {
                if ((this.CurrentCacheCountField.Equals(value) != true)) {
                    this.CurrentCacheCountField = value;
                    this.RaisePropertyChanged("CurrentCacheCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxCacheCount {
            get {
                return this.MaxCacheCountField;
            }
            set {
                if ((this.MaxCacheCountField.Equals(value) != true)) {
                    this.MaxCacheCountField = value;
                    this.RaisePropertyChanged("MaxCacheCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Geocache", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Geocache : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.AdditionalWaypoint[] AdditionalWaypointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Attribute[] AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheType CacheTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CanCacheBeFavoritedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ContainerType ContainerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentDetailsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLastUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateLastVisitedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncodedHintsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheLog[] GeocacheLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocacheNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasbeenFavoritedbyUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasbeenFoundbyUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ImageData[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LongDescriptionIsHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxDetailCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Member OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PublishDateUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShortDescriptionIsHtmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TerrainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackableCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Trackable[] TrackablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCPlaceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpgradeMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UserWaypoint[] UserWaypointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.AdditionalWaypoint[] AdditionalWaypoints {
            get {
                return this.AdditionalWaypointsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalWaypointsField, value) != true)) {
                    this.AdditionalWaypointsField = value;
                    this.RaisePropertyChanged("AdditionalWaypoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Attribute[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.GeocacheType CacheType {
            get {
                return this.CacheTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheTypeField, value) != true)) {
                    this.CacheTypeField = value;
                    this.RaisePropertyChanged("CacheType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> CanCacheBeFavorited {
            get {
                return this.CanCacheBeFavoritedField;
            }
            set {
                if ((this.CanCacheBeFavoritedField.Equals(value) != true)) {
                    this.CanCacheBeFavoritedField = value;
                    this.RaisePropertyChanged("CanCacheBeFavorited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.ContainerType ContainerType {
            get {
                return this.ContainerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerTypeField, value) != true)) {
                    this.ContainerTypeField = value;
                    this.RaisePropertyChanged("ContainerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentDetailsCount {
            get {
                return this.CurrentDetailsCountField;
            }
            set {
                if ((this.CurrentDetailsCountField.Equals(value) != true)) {
                    this.CurrentDetailsCountField = value;
                    this.RaisePropertyChanged("CurrentDetailsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateLastUpdate {
            get {
                return this.DateLastUpdateField;
            }
            set {
                if ((this.DateLastUpdateField.Equals(value) != true)) {
                    this.DateLastUpdateField = value;
                    this.RaisePropertyChanged("DateLastUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateLastVisited {
            get {
                return this.DateLastVisitedField;
            }
            set {
                if ((this.DateLastVisitedField.Equals(value) != true)) {
                    this.DateLastVisitedField = value;
                    this.RaisePropertyChanged("DateLastVisited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((this.DifficultyField.Equals(value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncodedHints {
            get {
                return this.EncodedHintsField;
            }
            set {
                if ((object.ReferenceEquals(this.EncodedHintsField, value) != true)) {
                    this.EncodedHintsField = value;
                    this.RaisePropertyChanged("EncodedHints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((this.FavoritePointsField.Equals(value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((this.GUIDField.Equals(value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.GeocacheLog[] GeocacheLogs {
            get {
                return this.GeocacheLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheLogsField, value) != true)) {
                    this.GeocacheLogsField = value;
                    this.RaisePropertyChanged("GeocacheLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocacheNote {
            get {
                return this.GeocacheNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheNoteField, value) != true)) {
                    this.GeocacheNoteField = value;
                    this.RaisePropertyChanged("GeocacheNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasbeenFavoritedbyUser {
            get {
                return this.HasbeenFavoritedbyUserField;
            }
            set {
                if ((this.HasbeenFavoritedbyUserField.Equals(value) != true)) {
                    this.HasbeenFavoritedbyUserField = value;
                    this.RaisePropertyChanged("HasbeenFavoritedbyUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasbeenFoundbyUser {
            get {
                return this.HasbeenFoundbyUserField;
            }
            set {
                if ((this.HasbeenFoundbyUserField.Equals(value) != true)) {
                    this.HasbeenFoundbyUserField = value;
                    this.RaisePropertyChanged("HasbeenFoundbyUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImageCount {
            get {
                return this.ImageCountField;
            }
            set {
                if ((this.ImageCountField.Equals(value) != true)) {
                    this.ImageCountField = value;
                    this.RaisePropertyChanged("ImageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.ImageData[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsPremium {
            get {
                return this.IsPremiumField;
            }
            set {
                if ((this.IsPremiumField.Equals(value) != true)) {
                    this.IsPremiumField = value;
                    this.RaisePropertyChanged("IsPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LongDescription {
            get {
                return this.LongDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LongDescriptionField, value) != true)) {
                    this.LongDescriptionField = value;
                    this.RaisePropertyChanged("LongDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LongDescriptionIsHtml {
            get {
                return this.LongDescriptionIsHtmlField;
            }
            set {
                if ((this.LongDescriptionIsHtmlField.Equals(value) != true)) {
                    this.LongDescriptionIsHtmlField = value;
                    this.RaisePropertyChanged("LongDescriptionIsHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxDetailCount {
            get {
                return this.MaxDetailCountField;
            }
            set {
                if ((this.MaxDetailCountField.Equals(value) != true)) {
                    this.MaxDetailCountField = value;
                    this.RaisePropertyChanged("MaxDetailCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Member Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlacedBy {
            get {
                return this.PlacedByField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacedByField, value) != true)) {
                    this.PlacedByField = value;
                    this.RaisePropertyChanged("PlacedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishDateUtc {
            get {
                return this.PublishDateUtcField;
            }
            set {
                if ((this.PublishDateUtcField.Equals(value) != true)) {
                    this.PublishDateUtcField = value;
                    this.RaisePropertyChanged("PublishDateUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortDescription {
            get {
                return this.ShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortDescriptionField, value) != true)) {
                    this.ShortDescriptionField = value;
                    this.RaisePropertyChanged("ShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShortDescriptionIsHtml {
            get {
                return this.ShortDescriptionIsHtmlField;
            }
            set {
                if ((this.ShortDescriptionIsHtmlField.Equals(value) != true)) {
                    this.ShortDescriptionIsHtmlField = value;
                    this.RaisePropertyChanged("ShortDescriptionIsHtml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Terrain {
            get {
                return this.TerrainField;
            }
            set {
                if ((this.TerrainField.Equals(value) != true)) {
                    this.TerrainField = value;
                    this.RaisePropertyChanged("Terrain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackableCount {
            get {
                return this.TrackableCountField;
            }
            set {
                if ((this.TrackableCountField.Equals(value) != true)) {
                    this.TrackableCountField = value;
                    this.RaisePropertyChanged("TrackableCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Trackable[] Trackables {
            get {
                return this.TrackablesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackablesField, value) != true)) {
                    this.TrackablesField = value;
                    this.RaisePropertyChanged("Trackables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCPlaceDate {
            get {
                return this.UTCPlaceDateField;
            }
            set {
                if ((this.UTCPlaceDateField.Equals(value) != true)) {
                    this.UTCPlaceDateField = value;
                    this.RaisePropertyChanged("UTCPlaceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpgradeMessage {
            get {
                return this.UpgradeMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.UpgradeMessageField, value) != true)) {
                    this.UpgradeMessageField = value;
                    this.RaisePropertyChanged("UpgradeMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.UserWaypoint[] UserWaypoints {
            get {
                return this.UserWaypointsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserWaypointsField, value) != true)) {
                    this.UserWaypointsField = value;
                    this.RaisePropertyChanged("UserWaypoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ContainerType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContainerTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContainerTypeId {
            get {
                return this.ContainerTypeIdField;
            }
            set {
                if ((this.ContainerTypeIdField.Equals(value) != true)) {
                    this.ContainerTypeIdField = value;
                    this.RaisePropertyChanged("ContainerTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerTypeName {
            get {
                return this.ContainerTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerTypeNameField, value) != true)) {
                    this.ContainerTypeNameField = value;
                    this.RaisePropertyChanged("ContainerTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Member", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Member : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AvatarUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FindCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GalleryImageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> HideCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.LatLngPoint HomeCoordinatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.MembershipType MemberTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PublicGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AvatarUrl {
            get {
                return this.AvatarUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarUrlField, value) != true)) {
                    this.AvatarUrlField = value;
                    this.RaisePropertyChanged("AvatarUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FindCount {
            get {
                return this.FindCountField;
            }
            set {
                if ((this.FindCountField.Equals(value) != true)) {
                    this.FindCountField = value;
                    this.RaisePropertyChanged("FindCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GalleryImageCount {
            get {
                return this.GalleryImageCountField;
            }
            set {
                if ((this.GalleryImageCountField.Equals(value) != true)) {
                    this.GalleryImageCountField = value;
                    this.RaisePropertyChanged("GalleryImageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> HideCount {
            get {
                return this.HideCountField;
            }
            set {
                if ((this.HideCountField.Equals(value) != true)) {
                    this.HideCountField = value;
                    this.RaisePropertyChanged("HideCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.LatLngPoint HomeCoordinates {
            get {
                return this.HomeCoordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeCoordinatesField, value) != true)) {
                    this.HomeCoordinatesField = value;
                    this.RaisePropertyChanged("HomeCoordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.MembershipType MemberType {
            get {
                return this.MemberTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberTypeField, value) != true)) {
                    this.MemberTypeField = value;
                    this.RaisePropertyChanged("MemberType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PublicGuid {
            get {
                return this.PublicGuidField;
            }
            set {
                if ((this.PublicGuidField.Equals(value) != true)) {
                    this.PublicGuidField = value;
                    this.RaisePropertyChanged("PublicGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdditionalWaypoint", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class AdditionalWaypoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCEnteredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WptTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((this.GUIDField.Equals(value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocacheCode {
            get {
                return this.GeocacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheCodeField, value) != true)) {
                    this.GeocacheCodeField = value;
                    this.RaisePropertyChanged("GeocacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCEnteredDate {
            get {
                return this.UTCEnteredDateField;
            }
            set {
                if ((this.UTCEnteredDateField.Equals(value) != true)) {
                    this.UTCEnteredDateField = value;
                    this.RaisePropertyChanged("UTCEnteredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UrlName {
            get {
                return this.UrlNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlNameField, value) != true)) {
                    this.UrlNameField = value;
                    this.RaisePropertyChanged("UrlName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WptTypeID {
            get {
                return this.WptTypeIDField;
            }
            set {
                if ((this.WptTypeIDField.Equals(value) != true)) {
                    this.WptTypeIDField = value;
                    this.RaisePropertyChanged("WptTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attribute", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Attribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttributeTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttributeTypeID {
            get {
                return this.AttributeTypeIDField;
            }
            set {
                if ((this.AttributeTypeIDField.Equals(value) != true)) {
                    this.AttributeTypeIDField = value;
                    this.RaisePropertyChanged("AttributeTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOn {
            get {
                return this.IsOnField;
            }
            set {
                if ((this.IsOnField.Equals(value) != true)) {
                    this.IsOnField = value;
                    this.RaisePropertyChanged("IsOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheLog", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CannotDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Member FinderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ImageData[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LogIsEncodedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.WptLogType LogTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCCreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> UpdatedLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> UpdatedLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CannotDelete {
            get {
                return this.CannotDeleteField;
            }
            set {
                if ((this.CannotDeleteField.Equals(value) != true)) {
                    this.CannotDeleteField = value;
                    this.RaisePropertyChanged("CannotDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Member Finder {
            get {
                return this.FinderField;
            }
            set {
                if ((object.ReferenceEquals(this.FinderField, value) != true)) {
                    this.FinderField = value;
                    this.RaisePropertyChanged("Finder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.ImageData[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsArchived {
            get {
                return this.IsArchivedField;
            }
            set {
                if ((this.IsArchivedField.Equals(value) != true)) {
                    this.IsArchivedField = value;
                    this.RaisePropertyChanged("IsArchived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LogIsEncoded {
            get {
                return this.LogIsEncodedField;
            }
            set {
                if ((this.LogIsEncodedField.Equals(value) != true)) {
                    this.LogIsEncodedField = value;
                    this.RaisePropertyChanged("LogIsEncoded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogText {
            get {
                return this.LogTextField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTextField, value) != true)) {
                    this.LogTextField = value;
                    this.RaisePropertyChanged("LogText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.WptLogType LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTypeField, value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCCreateDate {
            get {
                return this.UTCCreateDateField;
            }
            set {
                if ((this.UTCCreateDateField.Equals(value) != true)) {
                    this.UTCCreateDateField = value;
                    this.RaisePropertyChanged("UTCCreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> UpdatedLatitude {
            get {
                return this.UpdatedLatitudeField;
            }
            set {
                if ((this.UpdatedLatitudeField.Equals(value) != true)) {
                    this.UpdatedLatitudeField = value;
                    this.RaisePropertyChanged("UpdatedLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> UpdatedLongitude {
            get {
                return this.UpdatedLongitudeField;
            }
            set {
                if ((this.UpdatedLongitudeField.Equals(value) != true)) {
                    this.UpdatedLongitudeField = value;
                    this.RaisePropertyChanged("UpdatedLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitDate {
            get {
                return this.VisitDateField;
            }
            set {
                if ((this.VisitDateField.Equals(value) != true)) {
                    this.VisitDateField = value;
                    this.RaisePropertyChanged("VisitDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Trackable", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class Trackable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllowedToBeCollectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BugTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentGeocacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentGoalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Member CurrentOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IconUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ImageData[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Member OriginalOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TBTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TBTypeNameSingularField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.TrackableLog[] TrackableLogsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> UserCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WptTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AllowedToBeCollected {
            get {
                return this.AllowedToBeCollectedField;
            }
            set {
                if ((this.AllowedToBeCollectedField.Equals(value) != true)) {
                    this.AllowedToBeCollectedField = value;
                    this.RaisePropertyChanged("AllowedToBeCollected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BugTypeID {
            get {
                return this.BugTypeIDField;
            }
            set {
                if ((this.BugTypeIDField.Equals(value) != true)) {
                    this.BugTypeIDField = value;
                    this.RaisePropertyChanged("BugTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentGeocacheCode {
            get {
                return this.CurrentGeocacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentGeocacheCodeField, value) != true)) {
                    this.CurrentGeocacheCodeField = value;
                    this.RaisePropertyChanged("CurrentGeocacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentGoal {
            get {
                return this.CurrentGoalField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentGoalField, value) != true)) {
                    this.CurrentGoalField = value;
                    this.RaisePropertyChanged("CurrentGoal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Member CurrentOwner {
            get {
                return this.CurrentOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentOwnerField, value) != true)) {
                    this.CurrentOwnerField = value;
                    this.RaisePropertyChanged("CurrentOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconUrl {
            get {
                return this.IconUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.IconUrlField, value) != true)) {
                    this.IconUrlField = value;
                    this.RaisePropertyChanged("IconUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.ImageData[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InCollection {
            get {
                return this.InCollectionField;
            }
            set {
                if ((this.InCollectionField.Equals(value) != true)) {
                    this.InCollectionField = value;
                    this.RaisePropertyChanged("InCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Member OriginalOwner {
            get {
                return this.OriginalOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalOwnerField, value) != true)) {
                    this.OriginalOwnerField = value;
                    this.RaisePropertyChanged("OriginalOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBTypeName {
            get {
                return this.TBTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TBTypeNameField, value) != true)) {
                    this.TBTypeNameField = value;
                    this.RaisePropertyChanged("TBTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TBTypeNameSingular {
            get {
                return this.TBTypeNameSingularField;
            }
            set {
                if ((object.ReferenceEquals(this.TBTypeNameSingularField, value) != true)) {
                    this.TBTypeNameSingularField = value;
                    this.RaisePropertyChanged("TBTypeNameSingular");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.TrackableLog[] TrackableLogs {
            get {
                return this.TrackableLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogsField, value) != true)) {
                    this.TrackableLogsField = value;
                    this.RaisePropertyChanged("TrackableLogs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingCode {
            get {
                return this.TrackingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingCodeField, value) != true)) {
                    this.TrackingCodeField = value;
                    this.RaisePropertyChanged("TrackingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> UserCount {
            get {
                return this.UserCountField;
            }
            set {
                if ((this.UserCountField.Equals(value) != true)) {
                    this.UserCountField = value;
                    this.RaisePropertyChanged("UserCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WptTypeID {
            get {
                return this.WptTypeIDField;
            }
            set {
                if ((this.WptTypeIDField.Equals(value) != true)) {
                    this.WptTypeIDField = value;
                    this.RaisePropertyChanged("WptTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserWaypoint", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class UserWaypoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCDate {
            get {
                return this.UTCDateField;
            }
            set {
                if ((this.UTCDateField.Equals(value) != true)) {
                    this.UTCDateField = value;
                    this.RaisePropertyChanged("UTCDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LatLngPoint", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Utilities")]
    [System.SerializableAttribute()]
    public partial class LatLngPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackableLog", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class TrackableLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ImageData[] ImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LogGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LogIsEncodedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.WptLogType LogTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Member LoggedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCCreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> UpdatedLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> UpdatedLongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CacheID {
            get {
                return this.CacheIDField;
            }
            set {
                if ((this.CacheIDField.Equals(value) != true)) {
                    this.CacheIDField = value;
                    this.RaisePropertyChanged("CacheID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.ImageData[] Images {
            get {
                return this.ImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagesField, value) != true)) {
                    this.ImagesField = value;
                    this.RaisePropertyChanged("Images");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsArchived {
            get {
                return this.IsArchivedField;
            }
            set {
                if ((this.IsArchivedField.Equals(value) != true)) {
                    this.IsArchivedField = value;
                    this.RaisePropertyChanged("IsArchived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LogIsEncoded {
            get {
                return this.LogIsEncodedField;
            }
            set {
                if ((this.LogIsEncodedField.Equals(value) != true)) {
                    this.LogIsEncodedField = value;
                    this.RaisePropertyChanged("LogIsEncoded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogText {
            get {
                return this.LogTextField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTextField, value) != true)) {
                    this.LogTextField = value;
                    this.RaisePropertyChanged("LogText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.WptLogType LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTypeField, value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Member LoggedBy {
            get {
                return this.LoggedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggedByField, value) != true)) {
                    this.LoggedByField = value;
                    this.RaisePropertyChanged("LoggedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCCreateDate {
            get {
                return this.UTCCreateDateField;
            }
            set {
                if ((this.UTCCreateDateField.Equals(value) != true)) {
                    this.UTCCreateDateField = value;
                    this.RaisePropertyChanged("UTCCreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> UpdatedLatitude {
            get {
                return this.UpdatedLatitudeField;
            }
            set {
                if ((this.UpdatedLatitudeField.Equals(value) != true)) {
                    this.UpdatedLatitudeField = value;
                    this.RaisePropertyChanged("UpdatedLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> UpdatedLongitude {
            get {
                return this.UpdatedLongitudeField;
            }
            set {
                if ((this.UpdatedLongitudeField.Equals(value) != true)) {
                    this.UpdatedLongitudeField = value;
                    this.RaisePropertyChanged("UpdatedLongitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitDate {
            get {
                return this.VisitDateField;
            }
            set {
                if ((this.VisitDateField.Equals(value) != true)) {
                    this.VisitDateField = value;
                    this.RaisePropertyChanged("VisitDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPocketQueryZippedFileResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetPocketQueryZippedFileResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZippedFileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZippedFile {
            get {
                return this.ZippedFileField;
            }
            set {
                if ((object.ReferenceEquals(this.ZippedFileField, value) != true)) {
                    this.ZippedFileField = value;
                    this.RaisePropertyChanged("ZippedFile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrackableResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetTrackableResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Trackable[] TrackablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Trackable[] Trackables {
            get {
                return this.TrackablesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackablesField, value) != true)) {
                    this.TrackablesField = value;
                    this.RaisePropertyChanged("Trackables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrackableTravelResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetTrackableTravelResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.TrackableTravel[] TrackableTravelsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.TrackableTravel[] TrackableTravels {
            get {
                return this.TrackableTravelsField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableTravelsField, value) != true)) {
                    this.TrackableTravelsField = value;
                    this.RaisePropertyChanged("TrackableTravels");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackableTravel", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class TrackableTravel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLoggedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CacheID {
            get {
                return this.CacheIDField;
            }
            set {
                if ((this.CacheIDField.Equals(value) != true)) {
                    this.CacheIDField = value;
                    this.RaisePropertyChanged("CacheID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateLogged {
            get {
                return this.DateLoggedField;
            }
            set {
                if ((this.DateLoggedField.Equals(value) != true)) {
                    this.DateLoggedField = value;
                    this.RaisePropertyChanged("DateLogged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAttributeTypesDataResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetAttributeTypesDataResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.AttributeType[] AttributeTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.AttributeType[] AttributeTypes {
            get {
                return this.AttributeTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypesField, value) != true)) {
                    this.AttributeTypesField = value;
                    this.RaisePropertyChanged("AttributeTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserCredentialsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserCredentialsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Guid UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocacheLogResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocacheLogResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheLog[] LogsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.GeocacheLog[] Logs {
            get {
                return this.LogsField;
            }
            set {
                if ((object.ReferenceEquals(this.LogsField, value) != true)) {
                    this.LogsField = value;
                    this.RaisePropertyChanged("Logs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrackableLogsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetTrackableLogsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.TrackableLog[] TrackableLogsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.TrackableLog[] TrackableLogs {
            get {
                return this.TrackableLogsField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableLogsField, value) != true)) {
                    this.TrackableLogsField = value;
                    this.RaisePropertyChanged("TrackableLogs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersCacheNotesResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUsersCacheNotesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.CacheNote[] CacheNotesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.CacheNote[] CacheNotes {
            get {
                return this.CacheNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheNotesField, value) != true)) {
                    this.CacheNotesField = value;
                    this.RaisePropertyChanged("CacheNotes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheNote", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CacheNote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Member FinderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCCreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCUpdatedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByApplication {
            get {
                return this.CreatedByApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByApplicationField, value) != true)) {
                    this.CreatedByApplicationField = value;
                    this.RaisePropertyChanged("CreatedByApplication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Member Finder {
            get {
                return this.FinderField;
            }
            set {
                if ((object.ReferenceEquals(this.FinderField, value) != true)) {
                    this.FinderField = value;
                    this.RaisePropertyChanged("Finder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCCreateDate {
            get {
                return this.UTCCreateDateField;
            }
            set {
                if ((this.UTCCreateDateField.Equals(value) != true)) {
                    this.UTCCreateDateField = value;
                    this.RaisePropertyChanged("UTCCreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UTCUpdatedDate {
            get {
                return this.UTCUpdatedDateField;
            }
            set {
                if ((this.UTCUpdatedDateField.Equals(value) != true)) {
                    this.UTCUpdatedDateField = value;
                    this.RaisePropertyChanged("UTCUpdatedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserWaypointsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserWaypointsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UserWaypoint[] UserWaypointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.UserWaypoint[] UserWaypoints {
            get {
                return this.UserWaypointsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserWaypointsField, value) != true)) {
                    this.UserWaypointsField = value;
                    this.RaisePropertyChanged("UserWaypoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FavoritePointsSummaryResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class FavoritePointsSummaryResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheFavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UsersFavoritePointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> CacheFavoritePoints {
            get {
                return this.CacheFavoritePointsField;
            }
            set {
                if ((this.CacheFavoritePointsField.Equals(value) != true)) {
                    this.CacheFavoritePointsField = value;
                    this.RaisePropertyChanged("CacheFavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> UsersFavoritePoints {
            get {
                return this.UsersFavoritePointsField;
            }
            set {
                if ((this.UsersFavoritePointsField.Equals(value) != true)) {
                    this.UsersFavoritePointsField = value;
                    this.RaisePropertyChanged("UsersFavoritePoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserFavoritePointsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserFavoritePointsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FavoritePointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((this.FavoritePointsField.Equals(value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersWhoFavoritedCacheResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUsersWhoFavoritedCacheResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Member[] UsersWhoFavoritedCacheField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Member[] UsersWhoFavoritedCache {
            get {
                return this.UsersWhoFavoritedCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersWhoFavoritedCacheField, value) != true)) {
                    this.UsersWhoFavoritedCacheField = value;
                    this.RaisePropertyChanged("UsersWhoFavoritedCache");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCacheIdsFavoritedByUserResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetCacheIdsFavoritedByUserResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCachesFavoritedByUserResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetCachesFavoritedByUserResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.FavoritePointCacheInfo[] GeocachesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.FavoritePointCacheInfo[] Geocaches {
            get {
                return this.GeocachesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocachesField, value) != true)) {
                    this.GeocachesField = value;
                    this.RaisePropertyChanged("Geocaches");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FavoritePointCacheInfo", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class FavoritePointCacheInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheType CacheTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheTitle {
            get {
                return this.CacheTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheTitleField, value) != true)) {
                    this.CacheTitleField = value;
                    this.RaisePropertyChanged("CacheTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.GeocacheType CacheType {
            get {
                return this.CacheTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheTypeField, value) != true)) {
                    this.CacheTypeField = value;
                    this.RaisePropertyChanged("CacheType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBookmarkListsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetBookmarkListsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.BookmarkListEntry[] BookmarkListsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.BookmarkListEntry[] BookmarkLists {
            get {
                return this.BookmarkListsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarkListsField, value) != true)) {
                    this.BookmarkListsField = value;
                    this.RaisePropertyChanged("BookmarkLists");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookmarkListEntry", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class BookmarkListEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ListIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ListGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListIsSharedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListIsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListIsArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ListIsSpecialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ListTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ListID {
            get {
                return this.ListIDField;
            }
            set {
                if ((this.ListIDField.Equals(value) != true)) {
                    this.ListIDField = value;
                    this.RaisePropertyChanged("ListID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Guid ListGUID {
            get {
                return this.ListGUIDField;
            }
            set {
                if ((this.ListGUIDField.Equals(value) != true)) {
                    this.ListGUIDField = value;
                    this.RaisePropertyChanged("ListGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ListName {
            get {
                return this.ListNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ListNameField, value) != true)) {
                    this.ListNameField = value;
                    this.RaisePropertyChanged("ListName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ListDescription {
            get {
                return this.ListDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ListDescriptionField, value) != true)) {
                    this.ListDescriptionField = value;
                    this.RaisePropertyChanged("ListDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int NumberOfItems {
            get {
                return this.NumberOfItemsField;
            }
            set {
                if ((this.NumberOfItemsField.Equals(value) != true)) {
                    this.NumberOfItemsField = value;
                    this.RaisePropertyChanged("NumberOfItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool ListIsShared {
            get {
                return this.ListIsSharedField;
            }
            set {
                if ((this.ListIsSharedField.Equals(value) != true)) {
                    this.ListIsSharedField = value;
                    this.RaisePropertyChanged("ListIsShared");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool ListIsPublic {
            get {
                return this.ListIsPublicField;
            }
            set {
                if ((this.ListIsPublicField.Equals(value) != true)) {
                    this.ListIsPublicField = value;
                    this.RaisePropertyChanged("ListIsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool ListIsArchived {
            get {
                return this.ListIsArchivedField;
            }
            set {
                if ((this.ListIsArchivedField.Equals(value) != true)) {
                    this.ListIsArchivedField = value;
                    this.RaisePropertyChanged("ListIsArchived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool ListIsSpecial {
            get {
                return this.ListIsSpecialField;
            }
            set {
                if ((this.ListIsSpecialField.Equals(value) != true)) {
                    this.ListIsSpecialField = value;
                    this.RaisePropertyChanged("ListIsSpecial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int ListTypeID {
            get {
                return this.ListTypeIDField;
            }
            set {
                if ((this.ListTypeIDField.Equals(value) != true)) {
                    this.ListTypeIDField = value;
                    this.RaisePropertyChanged("ListTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocodeRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GeocodeRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocodeStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocodeString {
            get {
                return this.GeocodeStringField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocodeStringField, value) != true)) {
                    this.GeocodeStringField = value;
                    this.RaisePropertyChanged("GeocodeString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGeocodeResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetGeocodeResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WindowsPhoneTileSearchRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class WindowsPhoneTileSearchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TileUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMetricField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.PointRadiusFilter PointRadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.NotFoundByUsersFilter NotFoundByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.TerrainFilter TerrainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheNameFilter GeocacheNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.DifficultyFilter DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.CacheCodeFilter CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheTypeFilter GeocacheTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheContainerSizeFilter GeocacheContainerSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheExclusionsFilter GeocacheExclusionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.FavoritePointsFilter FavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.HiddenByUsersFilter HiddenByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.NotHiddenByUsersFilter NotHiddenByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ViewportFilter ViewportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.BookmarksExcludeFilter BookmarksExcludeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.TrackableCountFilter TrackableCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.CachePublishedDateFilter CachePublishedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TileUrl {
            get {
                return this.TileUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.TileUrlField, value) != true)) {
                    this.TileUrlField = value;
                    this.RaisePropertyChanged("TileUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsMetric {
            get {
                return this.IsMetricField;
            }
            set {
                if ((this.IsMetricField.Equals(value) != true)) {
                    this.IsMetricField = value;
                    this.RaisePropertyChanged("IsMetric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public GeoTransformer.GeocachingService.PointRadiusFilter PointRadius {
            get {
                return this.PointRadiusField;
            }
            set {
                if ((object.ReferenceEquals(this.PointRadiusField, value) != true)) {
                    this.PointRadiusField = value;
                    this.RaisePropertyChanged("PointRadius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public GeoTransformer.GeocachingService.NotFoundByUsersFilter NotFoundByUsers {
            get {
                return this.NotFoundByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.NotFoundByUsersField, value) != true)) {
                    this.NotFoundByUsersField = value;
                    this.RaisePropertyChanged("NotFoundByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public GeoTransformer.GeocachingService.TerrainFilter Terrain {
            get {
                return this.TerrainField;
            }
            set {
                if ((object.ReferenceEquals(this.TerrainField, value) != true)) {
                    this.TerrainField = value;
                    this.RaisePropertyChanged("Terrain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public GeoTransformer.GeocachingService.GeocacheNameFilter GeocacheName {
            get {
                return this.GeocacheNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheNameField, value) != true)) {
                    this.GeocacheNameField = value;
                    this.RaisePropertyChanged("GeocacheName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public GeoTransformer.GeocachingService.DifficultyFilter Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((object.ReferenceEquals(this.DifficultyField, value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public GeoTransformer.GeocachingService.CacheCodeFilter CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public GeoTransformer.GeocachingService.GeocacheTypeFilter GeocacheType {
            get {
                return this.GeocacheTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypeField, value) != true)) {
                    this.GeocacheTypeField = value;
                    this.RaisePropertyChanged("GeocacheType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public GeoTransformer.GeocachingService.GeocacheContainerSizeFilter GeocacheContainerSize {
            get {
                return this.GeocacheContainerSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheContainerSizeField, value) != true)) {
                    this.GeocacheContainerSizeField = value;
                    this.RaisePropertyChanged("GeocacheContainerSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public GeoTransformer.GeocachingService.GeocacheExclusionsFilter GeocacheExclusions {
            get {
                return this.GeocacheExclusionsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheExclusionsField, value) != true)) {
                    this.GeocacheExclusionsField = value;
                    this.RaisePropertyChanged("GeocacheExclusions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public GeoTransformer.GeocachingService.FavoritePointsFilter FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((object.ReferenceEquals(this.FavoritePointsField, value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public GeoTransformer.GeocachingService.HiddenByUsersFilter HiddenByUsers {
            get {
                return this.HiddenByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.HiddenByUsersField, value) != true)) {
                    this.HiddenByUsersField = value;
                    this.RaisePropertyChanged("HiddenByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public GeoTransformer.GeocachingService.NotHiddenByUsersFilter NotHiddenByUsers {
            get {
                return this.NotHiddenByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.NotHiddenByUsersField, value) != true)) {
                    this.NotHiddenByUsersField = value;
                    this.RaisePropertyChanged("NotHiddenByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public GeoTransformer.GeocachingService.ViewportFilter Viewport {
            get {
                return this.ViewportField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewportField, value) != true)) {
                    this.ViewportField = value;
                    this.RaisePropertyChanged("Viewport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public GeoTransformer.GeocachingService.BookmarksExcludeFilter BookmarksExclude {
            get {
                return this.BookmarksExcludeField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarksExcludeField, value) != true)) {
                    this.BookmarksExcludeField = value;
                    this.RaisePropertyChanged("BookmarksExclude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public GeoTransformer.GeocachingService.TrackableCountFilter TrackableCount {
            get {
                return this.TrackableCountField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableCountField, value) != true)) {
                    this.TrackableCountField = value;
                    this.RaisePropertyChanged("TrackableCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public GeoTransformer.GeocachingService.CachePublishedDateFilter CachePublishedDate {
            get {
                return this.CachePublishedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CachePublishedDateField, value) != true)) {
                    this.CachePublishedDateField = value;
                    this.RaisePropertyChanged("CachePublishedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PointRadiusFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class PointRadiusFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DistanceInMetersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.LatLngPoint PointField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DistanceInMeters {
            get {
                return this.DistanceInMetersField;
            }
            set {
                if ((this.DistanceInMetersField.Equals(value) != true)) {
                    this.DistanceInMetersField = value;
                    this.RaisePropertyChanged("DistanceInMeters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.LatLngPoint Point {
            get {
                return this.PointField;
            }
            set {
                if ((object.ReferenceEquals(this.PointField, value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotFoundByUsersFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class NotFoundByUsersFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UserNamesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] UserNames {
            get {
                return this.UserNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNamesField, value) != true)) {
                    this.UserNamesField = value;
                    this.RaisePropertyChanged("UserNames");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TerrainFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class TerrainFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MinTerrainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MaxTerrainField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MinTerrain {
            get {
                return this.MinTerrainField;
            }
            set {
                if ((this.MinTerrainField.Equals(value) != true)) {
                    this.MinTerrainField = value;
                    this.RaisePropertyChanged("MinTerrain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<double> MaxTerrain {
            get {
                return this.MaxTerrainField;
            }
            set {
                if ((this.MaxTerrainField.Equals(value) != true)) {
                    this.MaxTerrainField = value;
                    this.RaisePropertyChanged("MaxTerrain");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheNameFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheNameFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeocacheNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeocacheName {
            get {
                return this.GeocacheNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheNameField, value) != true)) {
                    this.GeocacheNameField = value;
                    this.RaisePropertyChanged("GeocacheName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DifficultyFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DifficultyFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MinDifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> MaxDifficultyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MinDifficulty {
            get {
                return this.MinDifficultyField;
            }
            set {
                if ((this.MinDifficultyField.Equals(value) != true)) {
                    this.MinDifficultyField = value;
                    this.RaisePropertyChanged("MinDifficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<double> MaxDifficulty {
            get {
                return this.MaxDifficultyField;
            }
            set {
                if ((this.MaxDifficultyField.Equals(value) != true)) {
                    this.MaxDifficultyField = value;
                    this.RaisePropertyChanged("MaxDifficulty");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheCodeFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CacheCodeFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CacheCodesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] CacheCodes {
            get {
                return this.CacheCodesField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodesField, value) != true)) {
                    this.CacheCodesField = value;
                    this.RaisePropertyChanged("CacheCodes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheTypeFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheTypeFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] GeocacheTypeIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] GeocacheTypeIds {
            get {
                return this.GeocacheTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypeIdsField, value) != true)) {
                    this.GeocacheTypeIdsField = value;
                    this.RaisePropertyChanged("GeocacheTypeIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheContainerSizeFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheContainerSizeFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] GeocacheContainerSizeIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] GeocacheContainerSizeIds {
            get {
                return this.GeocacheContainerSizeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheContainerSizeIdsField, value) != true)) {
                    this.GeocacheContainerSizeIdsField = value;
                    this.RaisePropertyChanged("GeocacheContainerSizeIds");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheExclusionsFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheExclusionsFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PremiumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Premium {
            get {
                return this.PremiumField;
            }
            set {
                if ((this.PremiumField.Equals(value) != true)) {
                    this.PremiumField = value;
                    this.RaisePropertyChanged("Premium");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FavoritePointsFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class FavoritePointsFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinFavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxFavoritePointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MinFavoritePoints {
            get {
                return this.MinFavoritePointsField;
            }
            set {
                if ((this.MinFavoritePointsField.Equals(value) != true)) {
                    this.MinFavoritePointsField = value;
                    this.RaisePropertyChanged("MinFavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> MaxFavoritePoints {
            get {
                return this.MaxFavoritePointsField;
            }
            set {
                if ((this.MaxFavoritePointsField.Equals(value) != true)) {
                    this.MaxFavoritePointsField = value;
                    this.RaisePropertyChanged("MaxFavoritePoints");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HiddenByUsersFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class HiddenByUsersFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UserNamesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] UserNames {
            get {
                return this.UserNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNamesField, value) != true)) {
                    this.UserNamesField = value;
                    this.RaisePropertyChanged("UserNames");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotHiddenByUsersFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class NotHiddenByUsersFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UserNamesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] UserNames {
            get {
                return this.UserNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNamesField, value) != true)) {
                    this.UserNamesField = value;
                    this.RaisePropertyChanged("UserNames");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewportFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ViewportFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.LatLngPoint BottomRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.LatLngPoint TopLeftField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.LatLngPoint BottomRight {
            get {
                return this.BottomRightField;
            }
            set {
                if ((object.ReferenceEquals(this.BottomRightField, value) != true)) {
                    this.BottomRightField = value;
                    this.RaisePropertyChanged("BottomRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.LatLngPoint TopLeft {
            get {
                return this.TopLeftField;
            }
            set {
                if ((object.ReferenceEquals(this.TopLeftField, value) != true)) {
                    this.TopLeftField = value;
                    this.RaisePropertyChanged("TopLeft");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookmarksExcludeFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class BookmarksExcludeFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] BookmarkListIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludeIgnoreListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] BookmarkListIDs {
            get {
                return this.BookmarkListIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarkListIDsField, value) != true)) {
                    this.BookmarkListIDsField = value;
                    this.RaisePropertyChanged("BookmarkListIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcludeIgnoreList {
            get {
                return this.ExcludeIgnoreListField;
            }
            set {
                if ((this.ExcludeIgnoreListField.Equals(value) != true)) {
                    this.ExcludeIgnoreListField = value;
                    this.RaisePropertyChanged("ExcludeIgnoreList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackableCountFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class TrackableCountFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MinTrackablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MaxTrackablesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MinTrackables {
            get {
                return this.MinTrackablesField;
            }
            set {
                if ((this.MinTrackablesField.Equals(value) != true)) {
                    this.MinTrackablesField = value;
                    this.RaisePropertyChanged("MinTrackables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<int> MaxTrackables {
            get {
                return this.MaxTrackablesField;
            }
            set {
                if ((this.MaxTrackablesField.Equals(value) != true)) {
                    this.MaxTrackablesField = value;
                    this.RaisePropertyChanged("MaxTrackables");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CachePublishedDateFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class CachePublishedDateFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.DateRange RangeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.DateRange Range {
            get {
                return this.RangeField;
            }
            set {
                if ((object.ReferenceEquals(this.RangeField, value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseGeocacheFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.NotFoundByUsersFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.NotHiddenByUsersFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.FieldNoteFindFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.TerrainFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.CachePublishedDateFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.GeocacheNameFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.DifficultyFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.CacheCodeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.GeocacheTypeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.GeocacheContainerSizeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.GeocacheExclusionsFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.FavoritePointsFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.HiddenByUsersFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.ViewportFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.BookmarksExcludeFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.TrackableCountFilter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GeoTransformer.GeocachingService.PointRadiusFilter))]
    public partial class BaseGeocacheFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldNoteFindFilter", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class FieldNoteFindFilter : GeoTransformer.GeocachingService.BaseGeocacheFilter {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DateRange", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class DateRange : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterWP7DeviceTileRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class RegisterWP7DeviceTileRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceFriendlyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotificationChannelUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceFriendlyName {
            get {
                return this.DeviceFriendlyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceFriendlyNameField, value) != true)) {
                    this.DeviceFriendlyNameField = value;
                    this.RaisePropertyChanged("DeviceFriendlyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceIdentifier {
            get {
                return this.DeviceIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdentifierField, value) != true)) {
                    this.DeviceIdentifierField = value;
                    this.RaisePropertyChanged("DeviceIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationChannelUrl {
            get {
                return this.NotificationChannelUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationChannelUrlField, value) != true)) {
                    this.NotificationChannelUrlField = value;
                    this.RaisePropertyChanged("NotificationChannelUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersCacheCountsRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUsersCacheCountsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] UsernamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Usernames {
            get {
                return this.UsernamesField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernamesField, value) != true)) {
                    this.UsernamesField = value;
                    this.RaisePropertyChanged("Usernames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserCacheCountsResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserCacheCountsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UserCounts[] UserCacheCountsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.UserCounts[] UserCacheCounts {
            get {
                return this.UserCacheCountsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCacheCountsField, value) != true)) {
                    this.UserCacheCountsField = value;
                    this.RaisePropertyChanged("UserCacheCounts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCounts", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class UserCounts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheFindsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheHidesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CacheFinds {
            get {
                return this.CacheFindsField;
            }
            set {
                if ((this.CacheFindsField.Equals(value) != true)) {
                    this.CacheFindsField = value;
                    this.RaisePropertyChanged("CacheFinds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CacheHides {
            get {
                return this.CacheHidesField;
            }
            set {
                if ((this.CacheHidesField.Equals(value) != true)) {
                    this.CacheHidesField = value;
                    this.RaisePropertyChanged("CacheHides");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrackablesByUserRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetTrackablesByUserRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackableLogsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CollectionOnlyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int TrackableLogsCount {
            get {
                return this.TrackableLogsCountField;
            }
            set {
                if ((this.TrackableLogsCountField.Equals(value) != true)) {
                    this.TrackableLogsCountField = value;
                    this.RaisePropertyChanged("TrackableLogsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<bool> CollectionOnly {
            get {
                return this.CollectionOnlyField;
            }
            set {
                if ((this.CollectionOnlyField.Equals(value) != true)) {
                    this.CollectionOnlyField = value;
                    this.RaisePropertyChanged("CollectionOnly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetTrackablesByOwnerRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetTrackablesByOwnerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackableLogsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> CollectionOnlyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int TrackableLogsCount {
            get {
                return this.TrackableLogsCountField;
            }
            set {
                if ((this.TrackableLogsCountField.Equals(value) != true)) {
                    this.TrackableLogsCountField = value;
                    this.RaisePropertyChanged("TrackableLogsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<bool> CollectionOnly {
            get {
                return this.CollectionOnlyField;
            }
            set {
                if ((this.CollectionOnlyField.Equals(value) != true)) {
                    this.CollectionOnlyField = value;
                    this.RaisePropertyChanged("CollectionOnly");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserGalleryRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserGalleryRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserGalleryResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserGalleryResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ImageData[] GalleryImagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.ImageData[] GalleryImages {
            get {
                return this.GalleryImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.GalleryImagesField, value) != true)) {
                    this.GalleryImagesField = value;
                    this.RaisePropertyChanged("GalleryImages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveUserWaypointRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SaveUserWaypointRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<long> ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SaveUserWaypointResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SaveUserWaypointResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UserWaypoint NewWaypointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.UserWaypoint NewWaypoint {
            get {
                return this.NewWaypointField;
            }
            set {
                if ((object.ReferenceEquals(this.NewWaypointField, value) != true)) {
                    this.NewWaypointField = value;
                    this.RaisePropertyChanged("NewWaypoint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersGeocacheLogsRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUsersGeocacheLogsRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.DateRange RangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] LogTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludeArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public GeoTransformer.GeocachingService.DateRange Range {
            get {
                return this.RangeField;
            }
            set {
                if ((object.ReferenceEquals(this.RangeField, value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long[] LogTypes {
            get {
                return this.LogTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.LogTypesField, value) != true)) {
                    this.LogTypesField = value;
                    this.RaisePropertyChanged("LogTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool ExcludeArchived {
            get {
                return this.ExcludeArchivedField;
            }
            set {
                if ((this.ExcludeArchivedField.Equals(value) != true)) {
                    this.ExcludeArchivedField = value;
                    this.RaisePropertyChanged("ExcludeArchived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMoreGeocachesRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetMoreGeocachesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StartIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GeocacheLogCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TrackableLogCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLite {
            get {
                return this.IsLiteField;
            }
            set {
                if ((this.IsLiteField.Equals(value) != true)) {
                    this.IsLiteField = value;
                    this.RaisePropertyChanged("IsLite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StartIndex {
            get {
                return this.StartIndexField;
            }
            set {
                if ((this.StartIndexField.Equals(value) != true)) {
                    this.StartIndexField = value;
                    this.RaisePropertyChanged("StartIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<int> GeocacheLogCount {
            get {
                return this.GeocacheLogCountField;
            }
            set {
                if ((this.GeocacheLogCountField.Equals(value) != true)) {
                    this.GeocacheLogCountField = value;
                    this.RaisePropertyChanged("GeocacheLogCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> TrackableLogCount {
            get {
                return this.TrackableLogCountField;
            }
            set {
                if ((this.TrackableLogCountField.Equals(value) != true)) {
                    this.TrackableLogCountField = value;
                    this.RaisePropertyChanged("TrackableLogCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchForGeocachesRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SearchForGeocachesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPerPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GeocacheLogCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TrackableLogCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.PointRadiusFilter PointRadiusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.NotFoundByUsersFilter NotFoundByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.TerrainFilter TerrainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheNameFilter GeocacheNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.DifficultyFilter DifficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.CacheCodeFilter CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheTypeFilter GeocacheTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheContainerSizeFilter GeocacheContainerSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheExclusionsFilter GeocacheExclusionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.FavoritePointsFilter FavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.HiddenByUsersFilter HiddenByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.NotHiddenByUsersFilter NotHiddenByUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ViewportFilter ViewportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.BookmarksExcludeFilter BookmarksExcludeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.TrackableCountFilter TrackableCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.FieldNoteFindFilter FieldNoteFindsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.CachePublishedDateFilter CachePublishedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLite {
            get {
                return this.IsLiteField;
            }
            set {
                if ((this.IsLiteField.Equals(value) != true)) {
                    this.IsLiteField = value;
                    this.RaisePropertyChanged("IsLite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxPerPage {
            get {
                return this.MaxPerPageField;
            }
            set {
                if ((this.MaxPerPageField.Equals(value) != true)) {
                    this.MaxPerPageField = value;
                    this.RaisePropertyChanged("MaxPerPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> GeocacheLogCount {
            get {
                return this.GeocacheLogCountField;
            }
            set {
                if ((this.GeocacheLogCountField.Equals(value) != true)) {
                    this.GeocacheLogCountField = value;
                    this.RaisePropertyChanged("GeocacheLogCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<int> TrackableLogCount {
            get {
                return this.TrackableLogCountField;
            }
            set {
                if ((this.TrackableLogCountField.Equals(value) != true)) {
                    this.TrackableLogCountField = value;
                    this.RaisePropertyChanged("TrackableLogCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public GeoTransformer.GeocachingService.PointRadiusFilter PointRadius {
            get {
                return this.PointRadiusField;
            }
            set {
                if ((object.ReferenceEquals(this.PointRadiusField, value) != true)) {
                    this.PointRadiusField = value;
                    this.RaisePropertyChanged("PointRadius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public GeoTransformer.GeocachingService.NotFoundByUsersFilter NotFoundByUsers {
            get {
                return this.NotFoundByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.NotFoundByUsersField, value) != true)) {
                    this.NotFoundByUsersField = value;
                    this.RaisePropertyChanged("NotFoundByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public GeoTransformer.GeocachingService.TerrainFilter Terrain {
            get {
                return this.TerrainField;
            }
            set {
                if ((object.ReferenceEquals(this.TerrainField, value) != true)) {
                    this.TerrainField = value;
                    this.RaisePropertyChanged("Terrain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public GeoTransformer.GeocachingService.GeocacheNameFilter GeocacheName {
            get {
                return this.GeocacheNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheNameField, value) != true)) {
                    this.GeocacheNameField = value;
                    this.RaisePropertyChanged("GeocacheName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public GeoTransformer.GeocachingService.DifficultyFilter Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((object.ReferenceEquals(this.DifficultyField, value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public GeoTransformer.GeocachingService.CacheCodeFilter CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public GeoTransformer.GeocachingService.GeocacheTypeFilter GeocacheType {
            get {
                return this.GeocacheTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheTypeField, value) != true)) {
                    this.GeocacheTypeField = value;
                    this.RaisePropertyChanged("GeocacheType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public GeoTransformer.GeocachingService.GeocacheContainerSizeFilter GeocacheContainerSize {
            get {
                return this.GeocacheContainerSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheContainerSizeField, value) != true)) {
                    this.GeocacheContainerSizeField = value;
                    this.RaisePropertyChanged("GeocacheContainerSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public GeoTransformer.GeocachingService.GeocacheExclusionsFilter GeocacheExclusions {
            get {
                return this.GeocacheExclusionsField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheExclusionsField, value) != true)) {
                    this.GeocacheExclusionsField = value;
                    this.RaisePropertyChanged("GeocacheExclusions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public GeoTransformer.GeocachingService.FavoritePointsFilter FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((object.ReferenceEquals(this.FavoritePointsField, value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public GeoTransformer.GeocachingService.HiddenByUsersFilter HiddenByUsers {
            get {
                return this.HiddenByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.HiddenByUsersField, value) != true)) {
                    this.HiddenByUsersField = value;
                    this.RaisePropertyChanged("HiddenByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public GeoTransformer.GeocachingService.NotHiddenByUsersFilter NotHiddenByUsers {
            get {
                return this.NotHiddenByUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.NotHiddenByUsersField, value) != true)) {
                    this.NotHiddenByUsersField = value;
                    this.RaisePropertyChanged("NotHiddenByUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public GeoTransformer.GeocachingService.ViewportFilter Viewport {
            get {
                return this.ViewportField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewportField, value) != true)) {
                    this.ViewportField = value;
                    this.RaisePropertyChanged("Viewport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public GeoTransformer.GeocachingService.BookmarksExcludeFilter BookmarksExclude {
            get {
                return this.BookmarksExcludeField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarksExcludeField, value) != true)) {
                    this.BookmarksExcludeField = value;
                    this.RaisePropertyChanged("BookmarksExclude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public GeoTransformer.GeocachingService.TrackableCountFilter TrackableCount {
            get {
                return this.TrackableCountField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableCountField, value) != true)) {
                    this.TrackableCountField = value;
                    this.RaisePropertyChanged("TrackableCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public GeoTransformer.GeocachingService.FieldNoteFindFilter FieldNoteFinds {
            get {
                return this.FieldNoteFindsField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNoteFindsField, value) != true)) {
                    this.FieldNoteFindsField = value;
                    this.RaisePropertyChanged("FieldNoteFinds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public GeoTransformer.GeocachingService.CachePublishedDateFilter CachePublishedDate {
            get {
                return this.CachePublishedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CachePublishedDateField, value) != true)) {
                    this.CachePublishedDateField = value;
                    this.RaisePropertyChanged("CachePublishedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAnotherUsersProfileRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetAnotherUsersProfileRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UserProfileOptions ProfileOptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public GeoTransformer.GeocachingService.UserProfileOptions ProfileOptions {
            get {
                return this.ProfileOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileOptionsField, value) != true)) {
                    this.ProfileOptionsField = value;
                    this.RaisePropertyChanged("ProfileOptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfileOptions", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class UserProfileOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ChallengesDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FavoritePointsDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GeocacheDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PublicProfileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SouvenirDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackableDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChallengesData {
            get {
                return this.ChallengesDataField;
            }
            set {
                if ((this.ChallengesDataField.Equals(value) != true)) {
                    this.ChallengesDataField = value;
                    this.RaisePropertyChanged("ChallengesData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FavoritePointsData {
            get {
                return this.FavoritePointsDataField;
            }
            set {
                if ((this.FavoritePointsDataField.Equals(value) != true)) {
                    this.FavoritePointsDataField = value;
                    this.RaisePropertyChanged("FavoritePointsData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GeocacheData {
            get {
                return this.GeocacheDataField;
            }
            set {
                if ((this.GeocacheDataField.Equals(value) != true)) {
                    this.GeocacheDataField = value;
                    this.RaisePropertyChanged("GeocacheData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PublicProfileData {
            get {
                return this.PublicProfileDataField;
            }
            set {
                if ((this.PublicProfileDataField.Equals(value) != true)) {
                    this.PublicProfileDataField = value;
                    this.RaisePropertyChanged("PublicProfileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SouvenirData {
            get {
                return this.SouvenirDataField;
            }
            set {
                if ((this.SouvenirDataField.Equals(value) != true)) {
                    this.SouvenirDataField = value;
                    this.RaisePropertyChanged("SouvenirData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackableData {
            get {
                return this.TrackableDataField;
            }
            set {
                if ((this.TrackableDataField.Equals(value) != true)) {
                    this.TrackableDataField = value;
                    this.RaisePropertyChanged("TrackableData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserProfileResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetUserProfileResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UserProfile ProfileField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.UserProfile Profile {
            get {
                return this.ProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileField, value) != true)) {
                    this.ProfileField = value;
                    this.RaisePropertyChanged("Profile");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class UserProfile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ChallengeProfileData ChallengesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.FavoritePointsUserSummary FavoritePointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheProfileData GeocachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.PublicProfileData PublicProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Souvenir[] SouvenirsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.SiteStats StatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.TrackableProfileData TrackablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Member UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.ChallengeProfileData Challenges {
            get {
                return this.ChallengesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChallengesField, value) != true)) {
                    this.ChallengesField = value;
                    this.RaisePropertyChanged("Challenges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.FavoritePointsUserSummary FavoritePoints {
            get {
                return this.FavoritePointsField;
            }
            set {
                if ((object.ReferenceEquals(this.FavoritePointsField, value) != true)) {
                    this.FavoritePointsField = value;
                    this.RaisePropertyChanged("FavoritePoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.GeocacheProfileData Geocaches {
            get {
                return this.GeocachesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocachesField, value) != true)) {
                    this.GeocachesField = value;
                    this.RaisePropertyChanged("Geocaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.PublicProfileData PublicProfile {
            get {
                return this.PublicProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicProfileField, value) != true)) {
                    this.PublicProfileField = value;
                    this.RaisePropertyChanged("PublicProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Souvenir[] Souvenirs {
            get {
                return this.SouvenirsField;
            }
            set {
                if ((object.ReferenceEquals(this.SouvenirsField, value) != true)) {
                    this.SouvenirsField = value;
                    this.RaisePropertyChanged("Souvenirs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.SiteStats Stats {
            get {
                return this.StatsField;
            }
            set {
                if ((object.ReferenceEquals(this.StatsField, value) != true)) {
                    this.StatsField = value;
                    this.RaisePropertyChanged("Stats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.TrackableProfileData Trackables {
            get {
                return this.TrackablesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackablesField, value) != true)) {
                    this.TrackablesField = value;
                    this.RaisePropertyChanged("Trackables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Member User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChallengeProfileData", Namespace="http://www.geocaching.com/Challenges.Live/data")]
    [System.SerializableAttribute()]
    public partial class ChallengeProfileData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AcceptedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompletedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ChallengeTypeStatistics[] TypeStatisticsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AcceptedCount {
            get {
                return this.AcceptedCountField;
            }
            set {
                if ((this.AcceptedCountField.Equals(value) != true)) {
                    this.AcceptedCountField = value;
                    this.RaisePropertyChanged("AcceptedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompletedCount {
            get {
                return this.CompletedCountField;
            }
            set {
                if ((this.CompletedCountField.Equals(value) != true)) {
                    this.CompletedCountField = value;
                    this.RaisePropertyChanged("CompletedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedCount {
            get {
                return this.CreatedCountField;
            }
            set {
                if ((this.CreatedCountField.Equals(value) != true)) {
                    this.CreatedCountField = value;
                    this.RaisePropertyChanged("CreatedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.ChallengeTypeStatistics[] TypeStatistics {
            get {
                return this.TypeStatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeStatisticsField, value) != true)) {
                    this.TypeStatisticsField = value;
                    this.RaisePropertyChanged("TypeStatistics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FavoritePointsUserSummary", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class FavoritePointsUserSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentCompleteTowardsNextPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointsAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalUntilNextPointField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PercentCompleteTowardsNextPoint {
            get {
                return this.PercentCompleteTowardsNextPointField;
            }
            set {
                if ((this.PercentCompleteTowardsNextPointField.Equals(value) != true)) {
                    this.PercentCompleteTowardsNextPointField = value;
                    this.RaisePropertyChanged("PercentCompleteTowardsNextPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PointsAvailable {
            get {
                return this.PointsAvailableField;
            }
            set {
                if ((this.PointsAvailableField.Equals(value) != true)) {
                    this.PointsAvailableField = value;
                    this.RaisePropertyChanged("PointsAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalPoints {
            get {
                return this.TotalPointsField;
            }
            set {
                if ((this.TotalPointsField.Equals(value) != true)) {
                    this.TotalPointsField = value;
                    this.RaisePropertyChanged("TotalPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalUntilNextPoint {
            get {
                return this.TotalUntilNextPointField;
            }
            set {
                if ((this.TotalUntilNextPointField.Equals(value) != true)) {
                    this.TotalUntilNextPointField = value;
                    this.RaisePropertyChanged("TotalUntilNextPoint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeocacheProfileData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class GeocacheProfileData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheType[] BenchmarkFindTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeocacheFindCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheType[] GeocacheFindTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GeocacheHideCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheType[] GeocacheHideTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.GeocacheType[] BenchmarkFindTypes {
            get {
                return this.BenchmarkFindTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.BenchmarkFindTypesField, value) != true)) {
                    this.BenchmarkFindTypesField = value;
                    this.RaisePropertyChanged("BenchmarkFindTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeocacheFindCount {
            get {
                return this.GeocacheFindCountField;
            }
            set {
                if ((this.GeocacheFindCountField.Equals(value) != true)) {
                    this.GeocacheFindCountField = value;
                    this.RaisePropertyChanged("GeocacheFindCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.GeocacheType[] GeocacheFindTypes {
            get {
                return this.GeocacheFindTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheFindTypesField, value) != true)) {
                    this.GeocacheFindTypesField = value;
                    this.RaisePropertyChanged("GeocacheFindTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GeocacheHideCount {
            get {
                return this.GeocacheHideCountField;
            }
            set {
                if ((this.GeocacheHideCountField.Equals(value) != true)) {
                    this.GeocacheHideCountField = value;
                    this.RaisePropertyChanged("GeocacheHideCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.GeocacheType[] GeocacheHideTypes {
            get {
                return this.GeocacheHideTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.GeocacheHideTypesField, value) != true)) {
                    this.GeocacheHideTypesField = value;
                    this.RaisePropertyChanged("GeocacheHideTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PublicProfileData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class PublicProfileData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ForumTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastVisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MemberSinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ProfilePhotoData ProfilePhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ForumTitle {
            get {
                return this.ForumTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ForumTitleField, value) != true)) {
                    this.ForumTitleField = value;
                    this.RaisePropertyChanged("ForumTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastVisit {
            get {
                return this.LastVisitField;
            }
            set {
                if ((this.LastVisitField.Equals(value) != true)) {
                    this.LastVisitField = value;
                    this.RaisePropertyChanged("LastVisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MemberSince {
            get {
                return this.MemberSinceField;
            }
            set {
                if ((this.MemberSinceField.Equals(value) != true)) {
                    this.MemberSinceField = value;
                    this.RaisePropertyChanged("MemberSince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Occupation {
            get {
                return this.OccupationField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationField, value) != true)) {
                    this.OccupationField = value;
                    this.RaisePropertyChanged("Occupation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.ProfilePhotoData ProfilePhoto {
            get {
                return this.ProfilePhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePhotoField, value) != true)) {
                    this.ProfilePhotoField = value;
                    this.RaisePropertyChanged("ProfilePhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileText {
            get {
                return this.ProfileTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileTextField, value) != true)) {
                    this.ProfileTextField = value;
                    this.RaisePropertyChanged("ProfileText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackableProfileData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class TrackableProfileData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TrackableFindCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Trackable[] TrackableFindTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TrackableOwnedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Trackable[] TrackableOwnedTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TrackableFindCount {
            get {
                return this.TrackableFindCountField;
            }
            set {
                if ((this.TrackableFindCountField.Equals(value) != true)) {
                    this.TrackableFindCountField = value;
                    this.RaisePropertyChanged("TrackableFindCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Trackable[] TrackableFindTypes {
            get {
                return this.TrackableFindTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableFindTypesField, value) != true)) {
                    this.TrackableFindTypesField = value;
                    this.RaisePropertyChanged("TrackableFindTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TrackableOwnedCount {
            get {
                return this.TrackableOwnedCountField;
            }
            set {
                if ((this.TrackableOwnedCountField.Equals(value) != true)) {
                    this.TrackableOwnedCountField = value;
                    this.RaisePropertyChanged("TrackableOwnedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.Trackable[] TrackableOwnedTypes {
            get {
                return this.TrackableOwnedTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackableOwnedTypesField, value) != true)) {
                    this.TrackableOwnedTypesField = value;
                    this.RaisePropertyChanged("TrackableOwnedTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Souvenir", Namespace="http://schemas.datacontract.org/2004/07/Souvenirs.Common.Model")]
    [System.SerializableAttribute()]
    public partial class Souvenir : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AboutTheArtistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArtistURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CacheIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoordinatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatorGUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateDiscoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateRangeEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateRangeStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeedbackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HowFoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IgnoreLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.SharedUtilitiesApprovalStatus IsApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LuaPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SouvenirGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SouvenirIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AboutTheArtist {
            get {
                return this.AboutTheArtistField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutTheArtistField, value) != true)) {
                    this.AboutTheArtistField = value;
                    this.RaisePropertyChanged("AboutTheArtist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistName {
            get {
                return this.ArtistNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistNameField, value) != true)) {
                    this.ArtistNameField = value;
                    this.RaisePropertyChanged("ArtistName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArtistURL {
            get {
                return this.ArtistURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ArtistURLField, value) != true)) {
                    this.ArtistURLField = value;
                    this.RaisePropertyChanged("ArtistURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CacheID {
            get {
                return this.CacheIDField;
            }
            set {
                if ((this.CacheIDField.Equals(value) != true)) {
                    this.CacheIDField = value;
                    this.RaisePropertyChanged("CacheID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Coordinates {
            get {
                return this.CoordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.CoordinatesField, value) != true)) {
                    this.CoordinatesField = value;
                    this.RaisePropertyChanged("Coordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatorGUID {
            get {
                return this.CreatorGUIDField;
            }
            set {
                if ((this.CreatorGUIDField.Equals(value) != true)) {
                    this.CreatorGUIDField = value;
                    this.RaisePropertyChanged("CreatorGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatorID {
            get {
                return this.CreatorIDField;
            }
            set {
                if ((this.CreatorIDField.Equals(value) != true)) {
                    this.CreatorIDField = value;
                    this.RaisePropertyChanged("CreatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorName {
            get {
                return this.CreatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorNameField, value) != true)) {
                    this.CreatorNameField = value;
                    this.RaisePropertyChanged("CreatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorURL {
            get {
                return this.CreatorURLField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorURLField, value) != true)) {
                    this.CreatorURLField = value;
                    this.RaisePropertyChanged("CreatorURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateDiscovered {
            get {
                return this.DateDiscoveredField;
            }
            set {
                if ((this.DateDiscoveredField.Equals(value) != true)) {
                    this.DateDiscoveredField = value;
                    this.RaisePropertyChanged("DateDiscovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateRangeEnd {
            get {
                return this.DateRangeEndField;
            }
            set {
                if ((this.DateRangeEndField.Equals(value) != true)) {
                    this.DateRangeEndField = value;
                    this.RaisePropertyChanged("DateRangeEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateRangeStart {
            get {
                return this.DateRangeStartField;
            }
            set {
                if ((this.DateRangeStartField.Equals(value) != true)) {
                    this.DateRangeStartField = value;
                    this.RaisePropertyChanged("DateRangeStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Feedback {
            get {
                return this.FeedbackField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedbackField, value) != true)) {
                    this.FeedbackField = value;
                    this.RaisePropertyChanged("Feedback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HowFound {
            get {
                return this.HowFoundField;
            }
            set {
                if ((this.HowFoundField.Equals(value) != true)) {
                    this.HowFoundField = value;
                    this.RaisePropertyChanged("HowFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IgnoreLocation {
            get {
                return this.IgnoreLocationField;
            }
            set {
                if ((this.IgnoreLocationField.Equals(value) != true)) {
                    this.IgnoreLocationField = value;
                    this.RaisePropertyChanged("IgnoreLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.SharedUtilitiesApprovalStatus IsApproved {
            get {
                return this.IsApprovedField;
            }
            set {
                if ((this.IsApprovedField.Equals(value) != true)) {
                    this.IsApprovedField = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LuaPath {
            get {
                return this.LuaPathField;
            }
            set {
                if ((object.ReferenceEquals(this.LuaPathField, value) != true)) {
                    this.LuaPathField = value;
                    this.RaisePropertyChanged("LuaPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SouvenirGuid {
            get {
                return this.SouvenirGuidField;
            }
            set {
                if ((this.SouvenirGuidField.Equals(value) != true)) {
                    this.SouvenirGuidField = value;
                    this.RaisePropertyChanged("SouvenirGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SouvenirID {
            get {
                return this.SouvenirIDField;
            }
            set {
                if ((this.SouvenirIDField.Equals(value) != true)) {
                    this.SouvenirIDField = value;
                    this.RaisePropertyChanged("SouvenirID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbPath {
            get {
                return this.ThumbPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbPathField, value) != true)) {
                    this.ThumbPathField = value;
                    this.RaisePropertyChanged("ThumbPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChallengeTypeStatistics", Namespace="http://www.geocaching.com/Challenges.Live/data")]
    [System.SerializableAttribute()]
    public partial class ChallengeTypeStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.ChallengeType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AcceptedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastAcceptedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CompletedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastCompletedOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.ChallengeType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int AcceptedCount {
            get {
                return this.AcceptedCountField;
            }
            set {
                if ((this.AcceptedCountField.Equals(value) != true)) {
                    this.AcceptedCountField = value;
                    this.RaisePropertyChanged("AcceptedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime LastAcceptedOn {
            get {
                return this.LastAcceptedOnField;
            }
            set {
                if ((this.LastAcceptedOnField.Equals(value) != true)) {
                    this.LastAcceptedOnField = value;
                    this.RaisePropertyChanged("LastAcceptedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> CompletedCount {
            get {
                return this.CompletedCountField;
            }
            set {
                if ((this.CompletedCountField.Equals(value) != true)) {
                    this.CompletedCountField = value;
                    this.RaisePropertyChanged("CompletedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<System.DateTime> LastCompletedOn {
            get {
                return this.LastCompletedOnField;
            }
            set {
                if ((this.LastCompletedOnField.Equals(value) != true)) {
                    this.LastCompletedOnField = value;
                    this.RaisePropertyChanged("LastCompletedOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChallengeType", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Challenges.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ChallengeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfilePhotoData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class ProfilePhotoData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoFilenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoDescription {
            get {
                return this.PhotoDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoDescriptionField, value) != true)) {
                    this.PhotoDescriptionField = value;
                    this.RaisePropertyChanged("PhotoDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoFilename {
            get {
                return this.PhotoFilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoFilenameField, value) != true)) {
                    this.PhotoFilenameField = value;
                    this.RaisePropertyChanged("PhotoFilename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoName {
            get {
                return this.PhotoNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoNameField, value) != true)) {
                    this.PhotoNameField = value;
                    this.RaisePropertyChanged("PhotoName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoUrl {
            get {
                return this.PhotoUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoUrlField, value) != true)) {
                    this.PhotoUrlField = value;
                    this.RaisePropertyChanged("PhotoUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharedUtilities.ApprovalStatus", Namespace="http://schemas.datacontract.org/2004/07/Souvenirs.Common")]
    public enum SharedUtilitiesApprovalStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Denied = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSubmitted = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateFieldNoteAndPublishRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class CreateFieldNoteAndPublishRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long WptLogTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCDateLoggedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PromoteToLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UploadImageData ImageDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FavoriteThisCacheField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EncryptLogTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UpdatedLatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double UpdatedLongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long WptLogTypeId {
            get {
                return this.WptLogTypeIdField;
            }
            set {
                if ((this.WptLogTypeIdField.Equals(value) != true)) {
                    this.WptLogTypeIdField = value;
                    this.RaisePropertyChanged("WptLogTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime UTCDateLogged {
            get {
                return this.UTCDateLoggedField;
            }
            set {
                if ((this.UTCDateLoggedField.Equals(value) != true)) {
                    this.UTCDateLoggedField = value;
                    this.RaisePropertyChanged("UTCDateLogged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool PromoteToLog {
            get {
                return this.PromoteToLogField;
            }
            set {
                if ((this.PromoteToLogField.Equals(value) != true)) {
                    this.PromoteToLogField = value;
                    this.RaisePropertyChanged("PromoteToLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public GeoTransformer.GeocachingService.UploadImageData ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool FavoriteThisCache {
            get {
                return this.FavoriteThisCacheField;
            }
            set {
                if ((this.FavoriteThisCacheField.Equals(value) != true)) {
                    this.FavoriteThisCacheField = value;
                    this.RaisePropertyChanged("FavoriteThisCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool EncryptLogText {
            get {
                return this.EncryptLogTextField;
            }
            set {
                if ((this.EncryptLogTextField.Equals(value) != true)) {
                    this.EncryptLogTextField = value;
                    this.RaisePropertyChanged("EncryptLogText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public double UpdatedLatitude {
            get {
                return this.UpdatedLatitudeField;
            }
            set {
                if ((this.UpdatedLatitudeField.Equals(value) != true)) {
                    this.UpdatedLatitudeField = value;
                    this.RaisePropertyChanged("UpdatedLatitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public double UpdatedLongitude {
            get {
                return this.UpdatedLongitudeField;
            }
            set {
                if ((this.UpdatedLongitudeField.Equals(value) != true)) {
                    this.UpdatedLongitudeField = value;
                    this.RaisePropertyChanged("UpdatedLongitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadImageData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class UploadImageData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileCaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string base64ImageDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileCaption {
            get {
                return this.FileCaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileCaptionField, value) != true)) {
                    this.FileCaptionField = value;
                    this.RaisePropertyChanged("FileCaption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileDescription {
            get {
                return this.FileDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDescriptionField, value) != true)) {
                    this.FileDescriptionField = value;
                    this.RaisePropertyChanged("FileDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string base64ImageData {
            get {
                return this.base64ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.base64ImageDataField, value) != true)) {
                    this.base64ImageDataField = value;
                    this.RaisePropertyChanged("base64ImageData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateFieldNoteAndPublishResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class CreateFieldNoteAndPublishResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.GeocacheLog LogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Souvenir[] SouvenirsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasValidFacebookAccountLinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasValidTwitterAccountLinkedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.GeocacheLog Log {
            get {
                return this.LogField;
            }
            set {
                if ((object.ReferenceEquals(this.LogField, value) != true)) {
                    this.LogField = value;
                    this.RaisePropertyChanged("Log");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public GeoTransformer.GeocachingService.Souvenir[] Souvenirs {
            get {
                return this.SouvenirsField;
            }
            set {
                if ((object.ReferenceEquals(this.SouvenirsField, value) != true)) {
                    this.SouvenirsField = value;
                    this.RaisePropertyChanged("Souvenirs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<bool> HasValidFacebookAccountLinked {
            get {
                return this.HasValidFacebookAccountLinkedField;
            }
            set {
                if ((this.HasValidFacebookAccountLinkedField.Equals(value) != true)) {
                    this.HasValidFacebookAccountLinkedField = value;
                    this.RaisePropertyChanged("HasValidFacebookAccountLinked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<bool> HasValidTwitterAccountLinked {
            get {
                return this.HasValidTwitterAccountLinkedField;
            }
            set {
                if ((this.HasValidTwitterAccountLinkedField.Equals(value) != true)) {
                    this.HasValidTwitterAccountLinkedField = value;
                    this.RaisePropertyChanged("HasValidTwitterAccountLinked");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchForSouvenirsByPublicGuidRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SearchForSouvenirsByPublicGuidRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PublicGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ExistingSouvenirIDsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PublicGuid {
            get {
                return this.PublicGuidField;
            }
            set {
                if ((this.PublicGuidField.Equals(value) != true)) {
                    this.PublicGuidField = value;
                    this.RaisePropertyChanged("PublicGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int[] ExistingSouvenirIDs {
            get {
                return this.ExistingSouvenirIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExistingSouvenirIDsField, value) != true)) {
                    this.ExistingSouvenirIDsField = value;
                    this.RaisePropertyChanged("ExistingSouvenirIDs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SouvenirResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class SouvenirResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.Souvenir[] SouvenirsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.Souvenir[] Souvenirs {
            get {
                return this.SouvenirsField;
            }
            set {
                if ((object.ReferenceEquals(this.SouvenirsField, value) != true)) {
                    this.SouvenirsField = value;
                    this.RaisePropertyChanged("Souvenirs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateCacheNoteRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class UpdateCacheNoteRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetYourUserProfileRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetYourUserProfileRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UserProfileOptions ProfileOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.DeviceData DeviceInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.UserProfileOptions ProfileOptions {
            get {
                return this.ProfileOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileOptionsField, value) != true)) {
                    this.ProfileOptionsField = value;
                    this.RaisePropertyChanged("ProfileOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public GeoTransformer.GeocachingService.DeviceData DeviceInfo {
            get {
                return this.DeviceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceInfoField, value) != true)) {
                    this.DeviceInfoField = value;
                    this.RaisePropertyChanged("DeviceInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceData", Namespace="http://schemas.datacontract.org/2004/07/Tucson.Geocaching.WCF.API.Geocaching.Type" +
        "s")]
    [System.SerializableAttribute()]
    public partial class DeviceData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationCurrentMemoryUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ApplicationPeakMemoryUsageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationSoftwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceOperatingSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DeviceTotalMemoryInMBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceUniqueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileHardwareVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebBrowserVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationCurrentMemoryUsage {
            get {
                return this.ApplicationCurrentMemoryUsageField;
            }
            set {
                if ((this.ApplicationCurrentMemoryUsageField.Equals(value) != true)) {
                    this.ApplicationCurrentMemoryUsageField = value;
                    this.RaisePropertyChanged("ApplicationCurrentMemoryUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ApplicationPeakMemoryUsage {
            get {
                return this.ApplicationPeakMemoryUsageField;
            }
            set {
                if ((this.ApplicationPeakMemoryUsageField.Equals(value) != true)) {
                    this.ApplicationPeakMemoryUsageField = value;
                    this.RaisePropertyChanged("ApplicationPeakMemoryUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationSoftwareVersion {
            get {
                return this.ApplicationSoftwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationSoftwareVersionField, value) != true)) {
                    this.ApplicationSoftwareVersionField = value;
                    this.RaisePropertyChanged("ApplicationSoftwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceManufacturer {
            get {
                return this.DeviceManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceManufacturerField, value) != true)) {
                    this.DeviceManufacturerField = value;
                    this.RaisePropertyChanged("DeviceManufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceOperatingSystem {
            get {
                return this.DeviceOperatingSystemField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceOperatingSystemField, value) != true)) {
                    this.DeviceOperatingSystemField = value;
                    this.RaisePropertyChanged("DeviceOperatingSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DeviceTotalMemoryInMB {
            get {
                return this.DeviceTotalMemoryInMBField;
            }
            set {
                if ((this.DeviceTotalMemoryInMBField.Equals(value) != true)) {
                    this.DeviceTotalMemoryInMBField = value;
                    this.RaisePropertyChanged("DeviceTotalMemoryInMB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceUniqueId {
            get {
                return this.DeviceUniqueIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceUniqueIdField, value) != true)) {
                    this.DeviceUniqueIdField = value;
                    this.RaisePropertyChanged("DeviceUniqueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileHardwareVersion {
            get {
                return this.MobileHardwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileHardwareVersionField, value) != true)) {
                    this.MobileHardwareVersionField = value;
                    this.RaisePropertyChanged("MobileHardwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebBrowserVersion {
            get {
                return this.WebBrowserVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.WebBrowserVersionField, value) != true)) {
                    this.WebBrowserVersionField = value;
                    this.RaisePropertyChanged("WebBrowserVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadImageToGeocacheLogRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class UploadImageToGeocacheLogRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LogGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UploadImageData ImageDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public GeoTransformer.GeocachingService.UploadImageData ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadImageResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class UploadImageResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateTrackableLogRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class CreateTrackableLogRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TravelBugCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UTCDateLoggedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LogTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UploadImageData ImageDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TravelBugCode {
            get {
                return this.TravelBugCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelBugCodeField, value) != true)) {
                    this.TravelBugCodeField = value;
                    this.RaisePropertyChanged("TravelBugCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string TrackingNumber {
            get {
                return this.TrackingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingNumberField, value) != true)) {
                    this.TrackingNumberField = value;
                    this.RaisePropertyChanged("TrackingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime UTCDateLogged {
            get {
                return this.UTCDateLoggedField;
            }
            set {
                if ((this.UTCDateLoggedField.Equals(value) != true)) {
                    this.UTCDateLoggedField = value;
                    this.RaisePropertyChanged("UTCDateLogged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public long LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((this.LogTypeField.Equals(value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public GeoTransformer.GeocachingService.UploadImageData ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateTrackableLogResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class CreateTrackableLogResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.TrackableLog LogField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.TrackableLog Log {
            get {
                return this.LogField;
            }
            set {
                if ((object.ReferenceEquals(this.LogField, value) != true)) {
                    this.LogField = value;
                    this.RaisePropertyChanged("Log");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadImageToTrackableLogRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class UploadImageToTrackableLogRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LogGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.UploadImageData ImageDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LogGuid {
            get {
                return this.LogGuidField;
            }
            set {
                if ((this.LogGuidField.Equals(value) != true)) {
                    this.LogGuidField = value;
                    this.RaisePropertyChanged("LogGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public GeoTransformer.GeocachingService.UploadImageData ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBookmarkListByGuidRequest", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetBookmarkListByGuidRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BookmarkListGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BookmarkListGuid {
            get {
                return this.BookmarkListGuidField;
            }
            set {
                if ((this.BookmarkListGuidField.Equals(value) != true)) {
                    this.BookmarkListGuidField = value;
                    this.RaisePropertyChanged("BookmarkListGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetBookmarkListResponse", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class GetBookmarkListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.StatusResponse StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GeoTransformer.GeocachingService.BookmarkEntry[] BookmarkListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GeoTransformer.GeocachingService.StatusResponse Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public GeoTransformer.GeocachingService.BookmarkEntry[] BookmarkList {
            get {
                return this.BookmarkListField;
            }
            set {
                if ((object.ReferenceEquals(this.BookmarkListField, value) != true)) {
                    this.BookmarkListField = value;
                    this.RaisePropertyChanged("BookmarkList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookmarkEntry", Namespace="http://www.geocaching.com/Geocaching.Live/data")]
    [System.SerializableAttribute()]
    public partial class BookmarkEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CacheTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CacheTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheCode {
            get {
                return this.CacheCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheCodeField, value) != true)) {
                    this.CacheCodeField = value;
                    this.RaisePropertyChanged("CacheCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CacheTitle {
            get {
                return this.CacheTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CacheTitleField, value) != true)) {
                    this.CacheTitleField = value;
                    this.RaisePropertyChanged("CacheTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CacheTypeID {
            get {
                return this.CacheTypeIDField;
            }
            set {
                if ((this.CacheTypeIDField.Equals(value) != true)) {
                    this.CacheTypeIDField = value;
                    this.RaisePropertyChanged("CacheTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GeocachingService.ILive")]
    public interface ILive {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/AddGeocachesToBookmarkList", ReplyAction="http://tempuri.org/ILive/AddGeocachesToBookmarkListResponse")]
        GeoTransformer.GeocachingService.StatusResponse AddGeocachesToBookmarkList(GeoTransformer.GeocachingService.AddGeocachesToBookmarkListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheStatus", ReplyAction="http://tempuri.org/ILive/GetGeocacheStatusResponse")]
        GeoTransformer.GeocachingService.GetGeocacheStatusResponse GetGeocacheStatus(GeoTransformer.GeocachingService.GetGeocacheStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetMembershipTypes", ReplyAction="http://tempuri.org/ILive/GetMembershipTypesResponse")]
        GeoTransformer.GeocachingService.GetMembershipTypesResponse GetMembershipTypes(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAPILimits", ReplyAction="http://tempuri.org/ILive/GetAPILimitsResponse")]
        GeoTransformer.GeocachingService.GetAPILimitsResponse GetAPILimits(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetSiteStats", ReplyAction="http://tempuri.org/ILive/GetSiteStatsResponse")]
        GeoTransformer.GeocachingService.GetSiteStatsResponse GetSiteStats(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetStatusMessages", ReplyAction="http://tempuri.org/ILive/GetStatusMessagesResponse")]
        GeoTransformer.GeocachingService.GetStatusMessageResponse GetStatusMessages(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetImagesForGeocache", ReplyAction="http://tempuri.org/ILive/GetImagesForGeocacheResponse")]
        GeoTransformer.GeocachingService.GetImagesForGeocacheResponse GetImagesForGeocache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetWptLogTypes", ReplyAction="http://tempuri.org/ILive/GetWptLogTypesResponse")]
        GeoTransformer.GeocachingService.GetWptLogTypesResponse GetWptLogTypes(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheTypes", ReplyAction="http://tempuri.org/ILive/GetGeocacheTypesResponse")]
        GeoTransformer.GeocachingService.GetGeocacheTypesResponse GetGeocacheTypes(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheDataTypes", ReplyAction="http://tempuri.org/ILive/GetGeocacheDataTypesResponse")]
        GeoTransformer.GeocachingService.GetGeocacheDataTypesResponse GetGeocacheDataTypes(string accessToken, bool geocacheTypes, bool logTypes, bool attributeTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryList", ReplyAction="http://tempuri.org/ILive/GetPocketQueryListResponse")]
        GeoTransformer.GeocachingService.GetPocketQueryListResponse GetPocketQueryList(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryData", ReplyAction="http://tempuri.org/ILive/GetPocketQueryDataResponse")]
        GeoTransformer.GeocachingService.GetGeocacheDataResponse GetPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems, bool gcListOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetFullPocketQueryData", ReplyAction="http://tempuri.org/ILive/GetFullPocketQueryDataResponse")]
        GeoTransformer.GeocachingService.GetGeocacheDataResponse GetFullPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetPocketQueryZippedFile", ReplyAction="http://tempuri.org/ILive/GetPocketQueryZippedFileResponse")]
        GeoTransformer.GeocachingService.GetPocketQueryZippedFileResponse GetPocketQueryZippedFile(string accessToken, System.Guid pocketQueryGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesByTrackingNumber", ReplyAction="http://tempuri.org/ILive/GetTrackablesByTrackingNumberResponse")]
        GeoTransformer.GeocachingService.GetTrackableResponse GetTrackablesByTrackingNumber(string accessToken, string trackingNumber, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesByTBCode", ReplyAction="http://tempuri.org/ILive/GetTrackablesByTBCodeResponse")]
        GeoTransformer.GeocachingService.GetTrackableResponse GetTrackablesByTBCode(string accessToken, string tbCode, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackablesInCache", ReplyAction="http://tempuri.org/ILive/GetTrackablesInCacheResponse")]
        GeoTransformer.GeocachingService.GetTrackableResponse GetTrackablesInCache(string accessToken, string cacheCode, int startIndex, int maxPerPage, int trackableLogCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackableTravelList", ReplyAction="http://tempuri.org/ILive/GetTrackableTravelListResponse")]
        GeoTransformer.GeocachingService.GetTrackableTravelResponse GetTrackableTravelList(string accessToken, string tbCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAttributeTypesData", ReplyAction="http://tempuri.org/ILive/GetAttributeTypesDataResponse")]
        GeoTransformer.GeocachingService.GetAttributeTypesDataResponse GetAttributeTypesData(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserCredentials", ReplyAction="http://tempuri.org/ILive/GetUserCredentialsResponse")]
        GeoTransformer.GeocachingService.GetUserCredentialsResponse GetUserCredentials(string consumerKey, System.Guid licenseGuid, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/DeleteCacheNote", ReplyAction="http://tempuri.org/ILive/DeleteCacheNoteResponse")]
        GeoTransformer.GeocachingService.StatusResponse DeleteCacheNote(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetGeocacheLogsByCacheCode", ReplyAction="http://tempuri.org/ILive/GetGeocacheLogsByCacheCodeResponse")]
        GeoTransformer.GeocachingService.GetGeocacheLogResponse GetGeocacheLogsByCacheCode(string accessToken, string cacheCode, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetTrackableLogsByTBCode", ReplyAction="http://tempuri.org/ILive/GetTrackableLogsByTBCodeResponse")]
        GeoTransformer.GeocachingService.GetTrackableLogsResponse GetTrackableLogsByTBCode(string accessToken, string tbCode, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersCacheNotes", ReplyAction="http://tempuri.org/ILive/GetUsersCacheNotesResponse")]
        GeoTransformer.GeocachingService.GetUsersCacheNotesResponse GetUsersCacheNotes(string accessToken, int startIndex, int maxPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserWaypoints", ReplyAction="http://tempuri.org/ILive/GetUserWaypointsResponse")]
        GeoTransformer.GeocachingService.GetUserWaypointsResponse GetUserWaypoints(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/DeleteUserWaypoint", ReplyAction="http://tempuri.org/ILive/DeleteUserWaypointResponse")]
        GeoTransformer.GeocachingService.StatusResponse DeleteUserWaypoint(string accessToken, long waypointID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCacheByTileGuid", ReplyAction="http://tempuri.org/ILive/GetCacheByTileGuidResponse")]
        GeoTransformer.GeocachingService.GetGeocacheDataResponse GetCacheByTileGuid(string accessToken, string tileGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/AddFavoritePointToCache", ReplyAction="http://tempuri.org/ILive/AddFavoritePointToCacheResponse")]
        GeoTransformer.GeocachingService.FavoritePointsSummaryResponse AddFavoritePointToCache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/RemoveFavoritePointFromCache", ReplyAction="http://tempuri.org/ILive/RemoveFavoritePointFromCacheResponse")]
        GeoTransformer.GeocachingService.FavoritePointsSummaryResponse RemoveFavoritePointFromCache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersFavoritePoints", ReplyAction="http://tempuri.org/ILive/GetUsersFavoritePointsResponse")]
        GeoTransformer.GeocachingService.GetUserFavoritePointsResponse GetUsersFavoritePoints(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersWhoFavoritedCache", ReplyAction="http://tempuri.org/ILive/GetUsersWhoFavoritedCacheResponse")]
        GeoTransformer.GeocachingService.GetUsersWhoFavoritedCacheResponse GetUsersWhoFavoritedCache(string accessToken, string cacheCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCacheIdsFavoritedByUser", ReplyAction="http://tempuri.org/ILive/GetCacheIdsFavoritedByUserResponse")]
        GeoTransformer.GeocachingService.GetCacheIdsFavoritedByUserResponse GetCacheIdsFavoritedByUser(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetCachesFavoritedByUser", ReplyAction="http://tempuri.org/ILive/GetCachesFavoritedByUserResponse")]
        GeoTransformer.GeocachingService.GetCachesFavoritedByUserResponse GetCachesFavoritedByUser(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListsForUser", ReplyAction="http://tempuri.org/ILive/GetBookmarkListsForUserResponse")]
        GeoTransformer.GeocachingService.GetBookmarkListsResponse GetBookmarkListsForUser(string accessToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListsByUserID", ReplyAction="http://tempuri.org/ILive/GetBookmarkListsByUserIDResponse")]
        GeoTransformer.GeocachingService.GetBookmarkListsResponse GetBookmarkListsByUserID(string accessToken, long userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GeocodeString", ReplyAction="http://tempuri.org/ILive/GeocodeStringResponse")]
        GeoTransformer.GeocachingService.GetGeocodeResponse GeocodeString(GeoTransformer.GeocachingService.GeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/WindowsPhoneTileSearch", ReplyAction="http://tempuri.org/ILive/WindowsPhoneTileSearchResponse")]
        GeoTransformer.GeocachingService.GetGeocacheDataResponse WindowsPhoneTileSearch(GeoTransformer.GeocachingService.WindowsPhoneTileSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/RegisterWP7DeviceTile", ReplyAction="http://tempuri.org/ILive/RegisterWP7DeviceTileResponse")]
        GeoTransformer.GeocachingService.StatusResponse RegisterWP7DeviceTile(GeoTransformer.GeocachingService.RegisterWP7DeviceTileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersCacheCounts", ReplyAction="http://tempuri.org/ILive/GetUsersCacheCountsResponse")]
        GeoTransformer.GeocachingService.GetUserCacheCountsResponse GetUsersCacheCounts(GeoTransformer.GeocachingService.GetUsersCacheCountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersTrackables", ReplyAction="http://tempuri.org/ILive/GetUsersTrackablesResponse")]
        GeoTransformer.GeocachingService.GetTrackableResponse GetUsersTrackables(GeoTransformer.GeocachingService.GetTrackablesByUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetOwnedTrackables", ReplyAction="http://tempuri.org/ILive/GetOwnedTrackablesResponse")]
        GeoTransformer.GeocachingService.GetTrackableResponse GetOwnedTrackables(GeoTransformer.GeocachingService.GetTrackablesByOwnerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUserGallery", ReplyAction="http://tempuri.org/ILive/GetUserGalleryResponse")]
        GeoTransformer.GeocachingService.GetUserGalleryResponse GetUserGallery(GeoTransformer.GeocachingService.GetUserGalleryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SaveUserWaypoint", ReplyAction="http://tempuri.org/ILive/SaveUserWaypointResponse")]
        GeoTransformer.GeocachingService.SaveUserWaypointResponse SaveUserWaypoint(GeoTransformer.GeocachingService.SaveUserWaypointRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetUsersGeocacheLogs", ReplyAction="http://tempuri.org/ILive/GetUsersGeocacheLogsResponse")]
        GeoTransformer.GeocachingService.GetGeocacheLogResponse GetUsersGeocacheLogs(GeoTransformer.GeocachingService.GetUsersGeocacheLogsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetMoreGeocaches", ReplyAction="http://tempuri.org/ILive/GetMoreGeocachesResponse")]
        GeoTransformer.GeocachingService.GetGeocacheDataResponse GetMoreGeocaches(GeoTransformer.GeocachingService.GetMoreGeocachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SearchForGeocaches", ReplyAction="http://tempuri.org/ILive/SearchForGeocachesResponse")]
        GeoTransformer.GeocachingService.GetGeocacheDataResponse SearchForGeocaches(GeoTransformer.GeocachingService.SearchForGeocachesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetAnotherUsersProfile", ReplyAction="http://tempuri.org/ILive/GetAnotherUsersProfileResponse")]
        GeoTransformer.GeocachingService.GetUserProfileResponse GetAnotherUsersProfile(GeoTransformer.GeocachingService.GetAnotherUsersProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/CreateFieldNoteAndPublish", ReplyAction="http://tempuri.org/ILive/CreateFieldNoteAndPublishResponse")]
        GeoTransformer.GeocachingService.CreateFieldNoteAndPublishResponse CreateFieldNoteAndPublish(GeoTransformer.GeocachingService.CreateFieldNoteAndPublishRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/SearchForSouvenirsByPublicGuid", ReplyAction="http://tempuri.org/ILive/SearchForSouvenirsByPublicGuidResponse")]
        GeoTransformer.GeocachingService.SouvenirResponse SearchForSouvenirsByPublicGuid(GeoTransformer.GeocachingService.SearchForSouvenirsByPublicGuidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UpdateCacheNote", ReplyAction="http://tempuri.org/ILive/UpdateCacheNoteResponse")]
        GeoTransformer.GeocachingService.StatusResponse UpdateCacheNote(GeoTransformer.GeocachingService.UpdateCacheNoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetYourUserProfile", ReplyAction="http://tempuri.org/ILive/GetYourUserProfileResponse")]
        GeoTransformer.GeocachingService.GetUserProfileResponse GetYourUserProfile(GeoTransformer.GeocachingService.GetYourUserProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UploadImageToGeocacheLog", ReplyAction="http://tempuri.org/ILive/UploadImageToGeocacheLogResponse")]
        GeoTransformer.GeocachingService.UploadImageResponse UploadImageToGeocacheLog(GeoTransformer.GeocachingService.UploadImageToGeocacheLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/CreateTrackableLog", ReplyAction="http://tempuri.org/ILive/CreateTrackableLogResponse")]
        GeoTransformer.GeocachingService.CreateTrackableLogResponse CreateTrackableLog(GeoTransformer.GeocachingService.CreateTrackableLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/UploadImageToTrackableLog", ReplyAction="http://tempuri.org/ILive/UploadImageToTrackableLogResponse")]
        GeoTransformer.GeocachingService.UploadImageResponse UploadImageToTrackableLog(GeoTransformer.GeocachingService.UploadImageToTrackableLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILive/GetBookmarkListByGuid", ReplyAction="http://tempuri.org/ILive/GetBookmarkListByGuidResponse")]
        GeoTransformer.GeocachingService.GetBookmarkListResponse GetBookmarkListByGuid(GeoTransformer.GeocachingService.GetBookmarkListByGuidRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILiveChannel : GeoTransformer.GeocachingService.ILive, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LiveClient : System.ServiceModel.ClientBase<GeoTransformer.GeocachingService.ILive>, GeoTransformer.GeocachingService.ILive {
        
        public LiveClient() {
        }
        
        public LiveClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LiveClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LiveClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LiveClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GeoTransformer.GeocachingService.StatusResponse AddGeocachesToBookmarkList(GeoTransformer.GeocachingService.AddGeocachesToBookmarkListRequest request) {
            return base.Channel.AddGeocachesToBookmarkList(request);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheStatusResponse GetGeocacheStatus(GeoTransformer.GeocachingService.GetGeocacheStatusRequest request) {
            return base.Channel.GetGeocacheStatus(request);
        }
        
        public GeoTransformer.GeocachingService.GetMembershipTypesResponse GetMembershipTypes(string accessToken) {
            return base.Channel.GetMembershipTypes(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetAPILimitsResponse GetAPILimits(string accessToken) {
            return base.Channel.GetAPILimits(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetSiteStatsResponse GetSiteStats(string accessToken) {
            return base.Channel.GetSiteStats(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetStatusMessageResponse GetStatusMessages(string accessToken) {
            return base.Channel.GetStatusMessages(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetImagesForGeocacheResponse GetImagesForGeocache(string accessToken, string cacheCode) {
            return base.Channel.GetImagesForGeocache(accessToken, cacheCode);
        }
        
        public GeoTransformer.GeocachingService.GetWptLogTypesResponse GetWptLogTypes(string accessToken) {
            return base.Channel.GetWptLogTypes(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheTypesResponse GetGeocacheTypes(string accessToken) {
            return base.Channel.GetGeocacheTypes(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheDataTypesResponse GetGeocacheDataTypes(string accessToken, bool geocacheTypes, bool logTypes, bool attributeTypes) {
            return base.Channel.GetGeocacheDataTypes(accessToken, geocacheTypes, logTypes, attributeTypes);
        }
        
        public GeoTransformer.GeocachingService.GetPocketQueryListResponse GetPocketQueryList(string accessToken) {
            return base.Channel.GetPocketQueryList(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheDataResponse GetPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems, bool gcListOnly) {
            return base.Channel.GetPocketQueryData(accessToken, pocketQueryGuid, startItem, maxItems, gcListOnly);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheDataResponse GetFullPocketQueryData(string accessToken, System.Guid pocketQueryGuid, int startItem, int maxItems) {
            return base.Channel.GetFullPocketQueryData(accessToken, pocketQueryGuid, startItem, maxItems);
        }
        
        public GeoTransformer.GeocachingService.GetPocketQueryZippedFileResponse GetPocketQueryZippedFile(string accessToken, System.Guid pocketQueryGuid) {
            return base.Channel.GetPocketQueryZippedFile(accessToken, pocketQueryGuid);
        }
        
        public GeoTransformer.GeocachingService.GetTrackableResponse GetTrackablesByTrackingNumber(string accessToken, string trackingNumber, int trackableLogCount) {
            return base.Channel.GetTrackablesByTrackingNumber(accessToken, trackingNumber, trackableLogCount);
        }
        
        public GeoTransformer.GeocachingService.GetTrackableResponse GetTrackablesByTBCode(string accessToken, string tbCode, int trackableLogCount) {
            return base.Channel.GetTrackablesByTBCode(accessToken, tbCode, trackableLogCount);
        }
        
        public GeoTransformer.GeocachingService.GetTrackableResponse GetTrackablesInCache(string accessToken, string cacheCode, int startIndex, int maxPerPage, int trackableLogCount) {
            return base.Channel.GetTrackablesInCache(accessToken, cacheCode, startIndex, maxPerPage, trackableLogCount);
        }
        
        public GeoTransformer.GeocachingService.GetTrackableTravelResponse GetTrackableTravelList(string accessToken, string tbCode) {
            return base.Channel.GetTrackableTravelList(accessToken, tbCode);
        }
        
        public GeoTransformer.GeocachingService.GetAttributeTypesDataResponse GetAttributeTypesData(string accessToken) {
            return base.Channel.GetAttributeTypesData(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetUserCredentialsResponse GetUserCredentials(string consumerKey, System.Guid licenseGuid, string username, string password) {
            return base.Channel.GetUserCredentials(consumerKey, licenseGuid, username, password);
        }
        
        public GeoTransformer.GeocachingService.StatusResponse DeleteCacheNote(string accessToken, string cacheCode) {
            return base.Channel.DeleteCacheNote(accessToken, cacheCode);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheLogResponse GetGeocacheLogsByCacheCode(string accessToken, string cacheCode, int startIndex, int maxPerPage) {
            return base.Channel.GetGeocacheLogsByCacheCode(accessToken, cacheCode, startIndex, maxPerPage);
        }
        
        public GeoTransformer.GeocachingService.GetTrackableLogsResponse GetTrackableLogsByTBCode(string accessToken, string tbCode, int startIndex, int maxPerPage) {
            return base.Channel.GetTrackableLogsByTBCode(accessToken, tbCode, startIndex, maxPerPage);
        }
        
        public GeoTransformer.GeocachingService.GetUsersCacheNotesResponse GetUsersCacheNotes(string accessToken, int startIndex, int maxPerPage) {
            return base.Channel.GetUsersCacheNotes(accessToken, startIndex, maxPerPage);
        }
        
        public GeoTransformer.GeocachingService.GetUserWaypointsResponse GetUserWaypoints(string accessToken, string cacheCode) {
            return base.Channel.GetUserWaypoints(accessToken, cacheCode);
        }
        
        public GeoTransformer.GeocachingService.StatusResponse DeleteUserWaypoint(string accessToken, long waypointID) {
            return base.Channel.DeleteUserWaypoint(accessToken, waypointID);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheDataResponse GetCacheByTileGuid(string accessToken, string tileGuid) {
            return base.Channel.GetCacheByTileGuid(accessToken, tileGuid);
        }
        
        public GeoTransformer.GeocachingService.FavoritePointsSummaryResponse AddFavoritePointToCache(string accessToken, string cacheCode) {
            return base.Channel.AddFavoritePointToCache(accessToken, cacheCode);
        }
        
        public GeoTransformer.GeocachingService.FavoritePointsSummaryResponse RemoveFavoritePointFromCache(string accessToken, string cacheCode) {
            return base.Channel.RemoveFavoritePointFromCache(accessToken, cacheCode);
        }
        
        public GeoTransformer.GeocachingService.GetUserFavoritePointsResponse GetUsersFavoritePoints(string accessToken) {
            return base.Channel.GetUsersFavoritePoints(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetUsersWhoFavoritedCacheResponse GetUsersWhoFavoritedCache(string accessToken, string cacheCode) {
            return base.Channel.GetUsersWhoFavoritedCache(accessToken, cacheCode);
        }
        
        public GeoTransformer.GeocachingService.GetCacheIdsFavoritedByUserResponse GetCacheIdsFavoritedByUser(string accessToken) {
            return base.Channel.GetCacheIdsFavoritedByUser(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetCachesFavoritedByUserResponse GetCachesFavoritedByUser(string accessToken) {
            return base.Channel.GetCachesFavoritedByUser(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetBookmarkListsResponse GetBookmarkListsForUser(string accessToken) {
            return base.Channel.GetBookmarkListsForUser(accessToken);
        }
        
        public GeoTransformer.GeocachingService.GetBookmarkListsResponse GetBookmarkListsByUserID(string accessToken, long userID) {
            return base.Channel.GetBookmarkListsByUserID(accessToken, userID);
        }
        
        public GeoTransformer.GeocachingService.GetGeocodeResponse GeocodeString(GeoTransformer.GeocachingService.GeocodeRequest request) {
            return base.Channel.GeocodeString(request);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheDataResponse WindowsPhoneTileSearch(GeoTransformer.GeocachingService.WindowsPhoneTileSearchRequest request) {
            return base.Channel.WindowsPhoneTileSearch(request);
        }
        
        public GeoTransformer.GeocachingService.StatusResponse RegisterWP7DeviceTile(GeoTransformer.GeocachingService.RegisterWP7DeviceTileRequest request) {
            return base.Channel.RegisterWP7DeviceTile(request);
        }
        
        public GeoTransformer.GeocachingService.GetUserCacheCountsResponse GetUsersCacheCounts(GeoTransformer.GeocachingService.GetUsersCacheCountsRequest request) {
            return base.Channel.GetUsersCacheCounts(request);
        }
        
        public GeoTransformer.GeocachingService.GetTrackableResponse GetUsersTrackables(GeoTransformer.GeocachingService.GetTrackablesByUserRequest request) {
            return base.Channel.GetUsersTrackables(request);
        }
        
        public GeoTransformer.GeocachingService.GetTrackableResponse GetOwnedTrackables(GeoTransformer.GeocachingService.GetTrackablesByOwnerRequest request) {
            return base.Channel.GetOwnedTrackables(request);
        }
        
        public GeoTransformer.GeocachingService.GetUserGalleryResponse GetUserGallery(GeoTransformer.GeocachingService.GetUserGalleryRequest request) {
            return base.Channel.GetUserGallery(request);
        }
        
        public GeoTransformer.GeocachingService.SaveUserWaypointResponse SaveUserWaypoint(GeoTransformer.GeocachingService.SaveUserWaypointRequest request) {
            return base.Channel.SaveUserWaypoint(request);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheLogResponse GetUsersGeocacheLogs(GeoTransformer.GeocachingService.GetUsersGeocacheLogsRequest request) {
            return base.Channel.GetUsersGeocacheLogs(request);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheDataResponse GetMoreGeocaches(GeoTransformer.GeocachingService.GetMoreGeocachesRequest request) {
            return base.Channel.GetMoreGeocaches(request);
        }
        
        public GeoTransformer.GeocachingService.GetGeocacheDataResponse SearchForGeocaches(GeoTransformer.GeocachingService.SearchForGeocachesRequest request) {
            return base.Channel.SearchForGeocaches(request);
        }
        
        public GeoTransformer.GeocachingService.GetUserProfileResponse GetAnotherUsersProfile(GeoTransformer.GeocachingService.GetAnotherUsersProfileRequest request) {
            return base.Channel.GetAnotherUsersProfile(request);
        }
        
        public GeoTransformer.GeocachingService.CreateFieldNoteAndPublishResponse CreateFieldNoteAndPublish(GeoTransformer.GeocachingService.CreateFieldNoteAndPublishRequest request) {
            return base.Channel.CreateFieldNoteAndPublish(request);
        }
        
        public GeoTransformer.GeocachingService.SouvenirResponse SearchForSouvenirsByPublicGuid(GeoTransformer.GeocachingService.SearchForSouvenirsByPublicGuidRequest request) {
            return base.Channel.SearchForSouvenirsByPublicGuid(request);
        }
        
        public GeoTransformer.GeocachingService.StatusResponse UpdateCacheNote(GeoTransformer.GeocachingService.UpdateCacheNoteRequest request) {
            return base.Channel.UpdateCacheNote(request);
        }
        
        public GeoTransformer.GeocachingService.GetUserProfileResponse GetYourUserProfile(GeoTransformer.GeocachingService.GetYourUserProfileRequest request) {
            return base.Channel.GetYourUserProfile(request);
        }
        
        public GeoTransformer.GeocachingService.UploadImageResponse UploadImageToGeocacheLog(GeoTransformer.GeocachingService.UploadImageToGeocacheLogRequest request) {
            return base.Channel.UploadImageToGeocacheLog(request);
        }
        
        public GeoTransformer.GeocachingService.CreateTrackableLogResponse CreateTrackableLog(GeoTransformer.GeocachingService.CreateTrackableLogRequest request) {
            return base.Channel.CreateTrackableLog(request);
        }
        
        public GeoTransformer.GeocachingService.UploadImageResponse UploadImageToTrackableLog(GeoTransformer.GeocachingService.UploadImageToTrackableLogRequest request) {
            return base.Channel.UploadImageToTrackableLog(request);
        }
        
        public GeoTransformer.GeocachingService.GetBookmarkListResponse GetBookmarkListByGuid(GeoTransformer.GeocachingService.GetBookmarkListByGuidRequest request) {
            return base.Channel.GetBookmarkListByGuid(request);
        }
    }
}
